{"version":3,"sources":["telescope-tags/lib/categories.js","telescope-tags/lib/custom_fields.js","telescope-tags/lib/hooks.js","telescope-tags//Users/lukasfeitsma/Documents/Studie/CMD/Jaar2/Blok4/Project-X/studentfactory/packages/telescope-tags/package-tap.i18n","telescope-tags/lib/client/routes.js","telescope-tags/lib/client/templates/categories.html","telescope-tags/lib/client/templates/categories.js","telescope-tags/lib/client/templates/category_item.html","telescope-tags/lib/client/templates/category_item.js","telescope-tags/lib/client/templates/category_title.html","telescope-tags/lib/client/templates/categories_menu.html","telescope-tags/lib/client/templates/categories_menu.js","telescope-tags/lib/client/templates/post_categories.html","telescope-tags/lib/client/templates/post_categories.js","telescope-tags//Users/lukasfeitsma/Documents/Studie/CMD/Jaar2/Blok4/Project-X/studentfactory/packages/telescope-tags/i18n/en.i18n.json"],"names":[],"mappings":";;;;;;;;AAAA,kB;AACA,mC;AACA,S;AACA,gB;AACA,I;AACA,gB;AACA,iB;AACA,mB;AACA,e;AACA,a;AACA,K;AACA,I;AACA,U;AACA,iB;AACA,kB;AACA,I;AACA,S;AACA,iB;AACA,kB;AACA,I;AACA,U;AACA,iB;AACA,kB;AACA,G;AACA,G;;AAEA,iD;AACA,wC;;AAEA,iD;AACA,+C;AACA,gB;AACA,iC;AACA,G;;AAEA,gC;AACA,4C;AACA,kE;AACA,U;AACA,+C;AACA,kG;AACA,I;AACA,C;;AAEA,4B;AACA,oB;AACA,wB;AACA,wB;AACA,uB;AACA,K;AACA,G;;AAEA,qC;AACA,yF;AACA,C;;AAEA,gC;AACA,uC;AACA,E;;AAEA,gD;AACA,mD;AACA,yG;AACA,gD;AACA,G;;;;;;;;;;;;;;;;;;AChEA,qB;AACA,G;AACA,+B;AACA,qB;AACA,qB;AACA,qB;AACA,qB;AACA,iB;AACA,uB;AACA,uB;AACA,8B;AACA,sE;AACA,oB;AACA,kC;AACA,kC;AACA,e;AACA,a;AACA,4B;AACA,S;AACA,O;AACA,K;AACA,G;AACA,E;;;;;;;;;;;;;;;;;;ACtBA,gB;AACA,sB;AACA,sB;AACA,0C;AACA,G;;AAEA,2C;AACA,kB;AACA,6B;AACA,W;AACA,G;AACA,E;AACA,+C;AACA,iB;AACA,6B;AACA,W;AACA,G;;AAEA,gB;AACA,6B;AACA,W;AACA,G;;AAEA,8E;AACA,wC;;;;;;;;;;;;;;;;;;;ACxBA,gH;;AAEA,+D;AACA,gD;AACA,2C;AACA,0E;AACA,uH;;AAEA,qD;AACA,6B;AACA,yC;;;;;;;;;;;;;;;;;;;ACVA,4B;;AAEA,yE;;AAEA,wD;AACA,I;AACA,qB;;AAEA,wB;;AAEA,iC;AACA,qE;AACA,kB;AACA,M;;AAEA,qC;AACA,0D;AACA,M;;AAEA,2B;AACA,4C;AACA,M;;AAEA,iC;AACA,uD;AACA,K;;AAEA,K;;AAEA,e;;AAEA,2C;AACA,2B;AACA,wC;AACA,+B;AACA,mC;AACA,oD;AACA,K;AACA,K;;AAEA,qB;;AAEA,+B;AACA,gC;AACA,sB;AACA,K;;;AAGA,G;;;;;;;;;;;;;;;;;;;AC/CA,mC;AACA,0E;AACA,kB;AACA,qB;AACA,qC;AACA,iG;AACA,Y;AACA,+C;AACA,+C;AACA,qC;AACA,qD;AACA,oD;AACA,2C;AACA,M;AACA,iB;AACA,+D;AACA,8C;AACA,qD;AACA,iB;AACA,uD;AACA,c;AACA,6D;AACA,Q;AACA,mB;AACA,2C;AACA,kD;AACA,S;AACA,iB;AACA,O;AACA,I;;;;;;;;;;;;;;;;;;;AC9BA,4B;AACA,+C;AACA,2B;AACA,8D;AACA,M;AACA,+B;AACA,yC;AACA,K;AACA,K;AACA,G;;;;;;;;;;;;;;;;;;;;ACRA,qC;AACA,8E;AACA,kB;AACA,mB;AACA,0B;AACA,+C;AACA,Y;AACA,+C;AACA,gD;AACA,qC;AACA,4C;AACA,qD;AACA,oD;AACA,2C;AACA,M;AACA,iB;AACA,+D;AACA,wE;AACA,I;;;;;;;;;;;;;;;;;;;ACnBA,4B;AACA,iD;AACA,yB;AACA,wC;AACA,K;AACA,K;;AAEA,gD;AACA,gD;AACA,yB;AACA,wC;AACA,6C;AACA,O;AACA,K;AACA,K;AACA,G;;;;;;;;;;;;;;;;;;;;ACdA,sC;AACA,gF;AACA,kB;AACA,kB;AACA,6C;AACA,4C;AACA,oD;AACA,M;AACA,I;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRA,uC;AACA,kF;AACA,kB;AACA,yC;AACA,Y;AACA,6C;AACA,0D;AACA,oD;AACA,uD;AACA,M;AACA,iB;AACA,mE;AACA,K;AACA,I;;;;;;;;;;;;;;;;;;;ACdA,4B;AACA,mD;AACA,4B;AACA,0B;AACA,+B;AACA,gC;AACA,sC;AACA,S;AACA,2G;AACA,gB;AACA,8B;AACA,iD;AACA,Y;AACA,8B;AACA,S;AACA,S;AACA,2C;AACA,M;AACA,2B;AACA,0B;AACA,sB;AACA,sE;AACA,0B;AACA,c;AACA,2B;AACA,O;AACA,K;AACA,K;AACA,G;;;;;;;;;;;;;;;;;;;;AC3BA,uC;AACA,kF;AACA,kB;AACA,gC;AACA,0D;AACA,iB;AACA,+B;AACA,wB;AACA,+D;AACA,Q;AACA,2B;AACA,sF;AACA,O;AACA,6C;AACA,qD;AACA,kB;AACA,K;AACA,I;;;;;;;;;;;;;;;;;;;AClBA,4B;AACA,mD;AACA,gC;AACA,uG;AACA,8C;AACA,S;AACA,M;AACA,6B;AACA,uC;AACA,K;AACA,K;AACA,G;;;;;;;;;;;;;;;;;;ACXA,6B;AACA,oC;AACA,iC;;AAEA,gC;AACA,yD;AACA,C;AACA,gD;AACA,kB;AACA,yN;AACA,gD;AACA,8E;;AAEA,oD;AACA,8C;;AAEA,yC;AACA,C","file":"/packages/telescope-tags.js","sourcesContent":["// category schema\ncategorySchema = new SimpleSchema({\n  name: {\n    type: String\n  },\n  description: {\n    type: String,\n    optional: true,\n    autoform: {\n      rows: 3\n    }\n  },\n  order: {\n    type: Number,\n    optional: true\n  },\n  slug: {\n    type: String,\n    optional: true\n  },\n  image: {\n    type: String,\n    optional: true\n  }\n});\n\nCategories = new Meteor.Collection(\"categories\");\nCategories.attachSchema(categorySchema);\n\nCategories.before.insert(function (userId, doc) {\n  // if no slug has been provided, generate one\n  if (!doc.slug)\n    doc.slug = slugify(doc.name);\n});\n\n// category post list parameters\nviewParameters.category = function (terms) {\n  var categoryId = Categories.findOne({slug: terms.category})._id;\n  return {\n    find: {'categories': {$in: [categoryId]}} ,\n    options: {sort: {sticky: -1, score: -1}} // for now categories views default to the \"top\" view\n  };\n}\n\nMeteor.startup(function () {\n  Categories.allow({\n    insert: isAdminById,\n    update: isAdminById,\n    remove: isAdminById\n  });\n});\n\ngetPostCategories = function (post) {\n  return !!post.categories ? Categories.find({_id: {$in: post.categories}}).fetch() : [];\n}\n\ngetCategoryUrl = function(slug){\n  return getSiteUrl()+'category/'+slug;\n};\n\n// add callback that adds categories CSS classes\npostClassCallbacks.push(function (post, postClass){\n  var classArray = _.map(getPostCategories(post), function (category){return \"category-\"+category.slug});\n  return postClass + \" \" + classArray.join(' ');\n});","addToPostSchema.push(\n  {\n    propertyName: 'categories',\n    propertySchema: {\n      type: [String],\n      optional: true,\n      editable: true,\n      autoform: {\n        editable: true,\n        noselect: true,\n        options: function () {\n          var categories = Categories.find().map(function (category) {\n            return {\n              value: category._id,\n              label: category.name\n            }  \n          });\n          return categories;\n        }\n      }\n    }\n  }\n);","adminMenu.push({\n  route: 'categories',\n  label: 'Categories',\n  description: 'add_and_remove_categories'\n});\n\n// push \"categories\" modules to postHeading\npostHeading.push({\n  template: 'postCategories',\n  order: 30\n});\n  \n// push \"categoriesMenu\" template to primaryNav\nprimaryNav.push({\n  template: 'categoriesMenu',\n  order: 50\n});\n\nmobileNav.push({\n  template: 'categoriesMenu',\n  order: 10\n});\n\n// we want to wait until categories are all loaded to load the rest of the app\npreloadSubscriptions.push('categories');\n","TAPi18n.packages[\"telescope-tags\"] = {\"translation_function_name\":\"__\",\"helper_name\":\"_\",\"namespace\":\"project\"};\n\n// define package's translation function (proxy to the i18next)\n__ = TAPi18n._getPackageI18nextProxy(\"project\");\n// define the package's templates registrar\nregisterI18nTemplate = TAPi18n._getRegisterHelpersProxy(\"telescope-tags\");\nregisterTemplate = registerI18nTemplate; // XXX OBSOLETE, kept for backward compatibility will be removed in the future\n\n// Record the list of templates prior to package load\nvar _ = Package.underscore._;\nnon_package_templates = _.keys(Template);\n","Meteor.startup(function () {\n\n  Router.onBeforeAction(Router._filters.isAdmin, {only: ['categories']});\n\n  PostsCategoryController = PostsListController.extend({\n    \n    view: 'category',\n\n    showViewsNav: false,\n\n    onBeforeAction: function () {\n      this.render(getTemplate('categoryTitle'), {to: 'postListTop'});\n      this.next();\n    },\n\n    getCurrentCategory: function () {\n      return Categories.findOne({slug: this.params.slug});\n    },\n\n    getTitle: function () {\n      return this.getCurrentCategory().name;\n    },\n\n    getDescription: function () {\n      return this.getCurrentCategory().description;    \n    }\n\n  });\n\n  // Categories\n\n  Router.route('/category/:slug/:limit?', {\n    name: 'posts_category',\n    controller: PostsCategoryController,\n    onAfterAction: function() {\n      this.slug = this.params.slug;\n      Session.set('categorySlug', this.params.slug);\n    }\n  });\n\n  // Categories Admin\n\n  Router.route('/categories', {\n    controller: AdminController,\n    name: 'categories'\n  });\n\n\n});","\nTemplate.__checkName(\"categories\");\nTemplate[\"categories\"] = new Template(\"Template.categories\", (function() {\n  var view = this;\n  return [ HTML.DIV({\n    \"class\": \"form-well add-category\"\n  }, \"\\n    \", HTML.Raw(\"<h3>Add new category:</h3>\"), \"\\n    \", Blaze._TemplateWith(function() {\n    return {\n      collection: Spacebars.call(\"Categories\"),\n      id: Spacebars.call(\"insertCategoryForm\"),\n      type: Spacebars.call(\"insert\"),\n      \"label-class\": Spacebars.call(\"control-label\"),\n      \"input-col-class\": Spacebars.call(\"controls\"),\n      template: Spacebars.call(\"telescope\")\n    };\n  }, function() {\n    return Spacebars.include(view.lookupTemplate(\"quickForm\"));\n  }), \"\\n  \"), \"\\n  \", Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"categories\"));\n  }, function() {\n    return [ \"\\n    \", Blaze._TemplateWith(function() {\n      return {\n        template: Spacebars.call(view.lookup(\"categoryItem\"))\n      };\n    }, function() {\n      return Spacebars.include(function() {\n        return Spacebars.call(Template.__dynamic);\n      });\n    }), \"\\n  \" ];\n  }) ];\n}));\n","Meteor.startup(function () {\n  Template[getTemplate('categories')].helpers({\n    categories: function(){\n      return Categories.find({}, {sort: {order: 1, name: 1}});\n    },\n    categoryItem: function () {\n      return getTemplate('categoryItem');\n    }\n  });\n});\n","\nTemplate.__checkName(\"categoryItem\");\nTemplate[\"categoryItem\"] = new Template(\"Template.categoryItem\", (function() {\n  var view = this;\n  return HTML.DIV({\n    \"class\": \"form-module\"\n  }, \"\\n    \", Blaze._TemplateWith(function() {\n    return {\n      collection: Spacebars.call(\"Categories\"),\n      id: Spacebars.call(view.lookup(\"formId\")),\n      type: Spacebars.call(\"update\"),\n      doc: Spacebars.call(view.lookup(\".\")),\n      \"label-class\": Spacebars.call(\"control-label\"),\n      \"input-col-class\": Spacebars.call(\"controls\"),\n      template: Spacebars.call(\"telescope\")\n    };\n  }, function() {\n    return Spacebars.include(view.lookupTemplate(\"quickForm\"));\n  }), HTML.Raw('\\n    <a href=\"#\" class=\"delete-link\">Delete</a>\\n  '));\n}));\n","Meteor.startup(function () {\n  Template[getTemplate('categoryItem')].helpers({\n    formId: function () {\n      return 'updateCategory-'+ this._id\n    }\n  });\n\n  Template[getTemplate('categoryItem')].events({\n    'click .delete-link': function(e, instance){\n      e.preventDefault();\n      if (confirm(\"Delete category?\")) {\n        Categories.remove(instance.data._id);\n      }\n    }\n  });\n});\n","\nTemplate.__checkName(\"categoryTitle\");\nTemplate[\"categoryTitle\"] = new Template(\"Template.categoryTitle\", (function() {\n  var view = this;\n  return HTML.H2({\n    \"class\": \"category-title post-list-title\"\n  }, Blaze.View(\"lookup:title\", function() {\n    return Spacebars.mustache(view.lookup(\"title\"));\n  }));\n}));\n","\nTemplate.__checkName(\"categoriesMenu\");\nTemplate[\"categoriesMenu\"] = new Template(\"Template.categoriesMenu\", (function() {\n  var view = this;\n  return Blaze._TemplateWith(function() {\n    return {\n      menuName: Spacebars.call(\"categories\"),\n      menuItems: Spacebars.call(view.lookup(\"menuItems\")),\n      menuClass: Spacebars.call(\"header-submodule\"),\n      menuMode: Spacebars.call(view.lookup(\"menuMode\"))\n    };\n  }, function() {\n    return Spacebars.include(view.lookupTemplate(\"menuComponent\"));\n  });\n}));\n","Meteor.startup(function () {\n  Template[getTemplate('categoriesMenu')].helpers({\n    menuItems: function () {\n      var defaultItem = [{\n        route: 'posts_default',\n        label: 'all_categories',\n        itemClass: 'item-never-active'\n      }];\n      var menuItems = _.map(Categories.find({}, {sort: {order: 1, name: 1}}).fetch(), function (category) {\n        return {\n          route: function () {\n            return getCategoryUrl(category.slug);\n          },\n          label: category.name\n        }\n      });\n      return defaultItem.concat(menuItems);\n    },\n    menuMode: function () {\n      if (!!this.mobile) {\n        return 'list';\n      } else if (Settings.get('navLayout', 'top-nav') === 'top-nav') {\n        return 'dropdown';\n      } else {\n        return 'accordion';\n      }\n    }\n  });\n});\n","\nTemplate.__checkName(\"postCategories\");\nTemplate[\"postCategories\"] = new Template(\"Template.postCategories\", (function() {\n  var view = this;\n  return Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"categoriesArray\"));\n  }, function() {\n    return [ \"\\n    \", HTML.A({\n      href: function() {\n        return Spacebars.mustache(view.lookup(\"categoryLink\"));\n      },\n      \"class\": function() {\n        return [ \"post-category category-\", Spacebars.mustache(view.lookup(\"slug\")) ];\n      }\n    }, Blaze.View(\"lookup:name\", function() {\n      return Spacebars.mustache(view.lookup(\"name\"));\n    })), \"\\n  \" ];\n  });\n}));\n","Meteor.startup(function () {\n  Template[getTemplate('postCategories')].helpers({\n    categoriesArray: function(){\n      return _.map(this.categories, function (categoryId) { // note: this.categories maybe be undefined\n        return Categories.findOne(categoryId);\n      });\n    },\n    categoryLink: function(){\n      return getCategoryUrl(this.slug);\n    }\n  });\n});","var _ = Package.underscore._,\n    package_name = \"telescope-tags\",\n    namespace = \"telescope-tags\";\n\nif (package_name != \"project\") {\n    namespace = TAPi18n.packages[package_name].namespace;\n}\n// integrate the fallback language translations \ntranslations = {};\ntranslations[namespace] = {\"categories\":\"Categorieën\",\"add_and_remove_categories\":\"Voeg toe en verwijderen categorieën.\",\"all_categories\":\"Alle categorieën\",\"invalid_category\":\"Sorry, dit is geen geldige categorie.\"};\nTAPi18n._loadLangFileObject(\"en\", translations);\nvar package_templates = _.difference(_.keys(Template), non_package_templates);\n\nfor (var i = 0; i < package_templates.length; i++) {\n  var package_template = package_templates[i];\n\n  registerI18nTemplate(package_template);\n}\n"]}