)]}'
{"version":3,"sources":["telescope-releases//Users/lukasfeitsma/Documents/Studie/CMD/Jaar2/Blok4/Project-X/klussenbank/packages/telescope-releases/package-tap.i18n","telescope-releases/lib/releases.js","telescope-releases/lib/client/templates/current_release.html","telescope-releases/lib/client/templates/current_release.js","telescope-releases//Users/lukasfeitsma/Documents/Studie/CMD/Jaar2/Blok4/Project-X/klussenbank/packages/telescope-releases/i18n/en.i18n.json"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,oH;;AAEA,+D;AACA,gD;AACA,2C;AACA,8E;AACA,uH;;AAEA,qD;AACA,6B;AACA,yC;;;;;;;;;;;;;;;;;;;ACVA,6C;;AAEA,kB;AACA,4B;AACA,G;;AAEA,4C;;AAEA,4B;AACA,kB;AACA,wB;AACA,wB;AACA,uB;AACA,K;AACA,G;;;;;;;;;;;;;;;;;;;;ACbA,uC;AACA,kF;AACA,kB;AACA,oC;AACA,yD;AACA,iB;AACA,iC;AACA,wD;AACA,4B;AACA,+B;AACA,0C;AACA,gF;AACA,+B;AACA,yB;AACA,oF;AACA,oD;AACA,wD;AACA,S;AACA,yC;AACA,gB;AACA,+C;AACA,iC;AACA,K;AACA,I;;;;;;;;;;;;;;;;;;;ACxBA,4B;;AAEA,iE;AACA,gC;AACA,qD;AACA,K;AACA,I;;AAEA,mD;AACA,iC;AACA,2C;AACA,K;AACA,K;;AAEA,kD;AACA,0D;AACA,6B;AACA,oE;AACA,K;AACA,I;;AAEA,G;;;;;;;;;;;;;;;;;;;ACrBA,6B;AACA,wC;AACA,qC;;AAEA,gC;AACA,yD;AACA,C;AACA,gD;AACA,kB;AACA,uF;AACA,gD;AACA,8E;;AAEA,oD;AACA,8C;;AAEA,yC;AACA,C","file":"/packages/telescope-releases.js","sourcesContent":["TAPi18n.packages[\"telescope-releases\"] = {\"translation_function_name\":\"__\",\"helper_name\":\"_\",\"namespace\":\"project\"};\n\n// define package's translation function (proxy to the i18next)\n__ = TAPi18n._getPackageI18nextProxy(\"project\");\n// define the package's templates registrar\nregisterI18nTemplate = TAPi18n._getRegisterHelpersProxy(\"telescope-releases\");\nregisterTemplate = registerI18nTemplate; // XXX OBSOLETE, kept for backward compatibility will be removed in the future\n\n// Record the list of templates prior to package load\nvar _ = Package.underscore._;\nnon_package_templates = _.keys(Template);\n","Releases = new Meteor.Collection('releases');\n\nheroModules.push({\n  template: 'currentRelease'\n});\n\npreloadSubscriptions.push('currentRelease');\n\nMeteor.startup(function () {\n  Releases.allow({\n    insert: isAdminById,\n    update: isAdminById,\n    remove: isAdminById\n  });\n});\n","\nTemplate.__checkName(\"currentRelease\");\nTemplate[\"currentRelease\"] = new Template(\"Template.currentRelease\", (function() {\n  var view = this;\n  return Spacebars.With(function() {\n    return Spacebars.call(view.lookup(\"currentRelease\"));\n  }, function() {\n    return [ \"\\n    \", HTML.DIV({\n      \"class\": \"current-release grid-module grid banner\"\n    }, \"\\n      \", HTML.H4({\n      \"class\": \"banner-heading\"\n    }, Blaze.View(\"lookup:_\", function() {\n      return Spacebars.mustache(view.lookup(\"_\"), \"telescope_has_been_updated\");\n    })), \"\\n      \", HTML.DIV({\n      \"class\": \"markdown\"\n    }, \"\\n        \", Spacebars.include(view.lookupTemplate(\"markdown\"), function() {\n      return Blaze.View(\"lookup:notes\", function() {\n        return Spacebars.mustache(view.lookup(\"notes\"));\n      });\n    }), \"\\n      \"), \"\\n      \", HTML.A({\n      href: \"#\",\n      \"class\": \"release-dismiss banner-dismiss\"\n    }, \"Ã—\"), \"\\n    \"), \"\\n  \" ];\n  });\n}));\n","Meteor.startup(function () {\n\n  Template[getTemplate('currentRelease')].created = function () {\n    this.release = function () {\n      return Releases.find({read: false}).fetch()[0];\n    }\n  };\n\n  Template[getTemplate('currentRelease')].helpers({\n    currentRelease: function () {\n      return Template.instance().release();\n    }\n  });\n\n  Template[getTemplate('currentRelease')].events({\n    'click .release-dismiss': function (event, instance) {\n      event.preventDefault();\n      Releases.update(instance.release()._id, {$set: {read: true}});\n    }\n  })\n\n});\n","var _ = Package.underscore._,\n    package_name = \"telescope-releases\",\n    namespace = \"telescope-releases\";\n\nif (package_name != \"project\") {\n    namespace = TAPi18n.packages[package_name].namespace;\n}\n// integrate the fallback language translations \ntranslations = {};\ntranslations[namespace] = {\"telescope_has_been_updated\":\"Telescope has been updated.\"};\nTAPi18n._loadLangFileObject(\"en\", translations);\nvar package_templates = _.difference(_.keys(Template), non_package_templates);\n\nfor (var i = 0; i < package_templates.length; i++) {\n  var package_template = package_templates[i];\n\n  registerI18nTemplate(package_template);\n}\n"]}