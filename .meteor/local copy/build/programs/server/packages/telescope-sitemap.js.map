{"version":3,"sources":["telescope-sitemap/lib/server/sitemaps.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,2B;AACA,I;AACA,Y;AACA,K;AACA,2C;AACA,oD;AACA,sC;AACA,yD;AACA,Q;AACA,6C;AACA,kC;AACA,mC;AACA,S;AACA,yC;AACA,M;;AAEA,uB;AACA,iB;AACA,iG;AACA,uE;AACA,uE;AACA,wE;AACA,M;;AAEA,iD;AACA,4C;AACA,6E;AACA,wE;AACA,sB;AACA,sB;AACA,+C;AACA,6B;AACA,gC;AACA,Y;AACA,S;AACA,S;AACA,K;;AAEA,6E;AACA,mD;AACA,uB;AACA,kD;AACA,iC;AACA,6D;AACA,2C;AACA,gD;AACA,mB;AACA,iC;AACA,S;AACA,oC;AACA,4D;AACA,kF;AACA,S;AACA,O;;AAEA,8C;AACA,uE;AACA,iB;AACA,K;AACA,G","file":"/packages/telescope-sitemap.js","sourcesContent":["Meteor.startup(function() {\n  /*\n   * Sitemap\n   */\n  sitemaps.add(\"/sitemap.xml\", function() {\n    var _getLatest = function(viewParamKey, terms) {\n      var params = getPostsParameters(\n        viewParameters[viewParamKey.toLowerCase()](terms)\n      );\n      var post = Posts.findOne(params.find, {\n        'fields': {'postedAt': 1},\n        'sort': params.options.sort\n      });\n      return post ? post.postedAt : null;\n    };\n\n    // Posts list pages\n    var paths = [\n      {page: \"/\", lastmod: _getLatest(Settings.get(\"defaultView\", \"top\")), changefreq: \"hourly\"},\n      {page: \"/top\", lastmod: _getLatest(\"top\"), changefreq: \"hourly\"},\n      {page: \"/new\", lastmod: _getLatest(\"new\"), changefreq: \"hourly\"},\n      {page: \"/best\", lastmod: _getLatest(\"best\"), changefreq: \"daily\"},\n    ];\n\n    // Categories (if telescope-tags is included)\n    if (typeof Categories !== \"undefined\") {\n      Categories.find({}, {fields: {\"slug\": 1}}).forEach(function(category) {\n        var lastMod = _getLatest(\"category\", {category: category.slug});\n        if (lastMod) {\n          paths.push({\n            page: \"/category/\" + category.slug,\n            lastmod: lastMod,\n            changefreq: \"hourly\"\n          })\n        }\n      });\n    }\n\n    // Individual post pages: include 100 latest in each of \"top\", \"new\", and\n    // \"best\". Aggregate them to avoid duplication.\n    var postPages = {};\n    _.each([\"top\", \"new\", \"best\"], function(key) {\n      var siteUrl = getSiteUrl();\n      var params = getPostsParameters(viewParameters[key]());\n      var posts = Posts.find(params.find, {\n        fields: {postedAt: 1, title: 1, _id: 1},\n        limit: 100,\n        sort: params.options.sort\n      });\n      posts.forEach(function(post) {\n        var url = getPostPageUrl(post).replace(siteUrl, \"\");\n        postPages[url] = {page: url, lastmod: post.postedAt, changefreq: \"daily\"};\n      });\n    });\n\n    paths = paths.concat(_.values(postPages));\n    paths = _.reject(paths, function(p) { return p.lastmod === null });\n    return paths;\n  });\n});\n"]}