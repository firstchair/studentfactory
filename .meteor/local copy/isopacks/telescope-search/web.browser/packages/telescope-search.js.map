{"version":3,"sources":["telescope-search/lib/search.js","telescope-search//Users/lukasfeitsma/Documents/Studie/CMD/Jaar2/Blok4/Project-X/klussenbank/packages/telescope-search/package-tap.i18n","telescope-search/lib/client/routes.js","telescope-search/lib/client/templates/search.html","telescope-search/lib/client/templates/search.js","telescope-search/lib/client/templates/search_logs.html","telescope-search/lib/client/templates/search_logs.js","telescope-search//Users/lukasfeitsma/Documents/Studie/CMD/Jaar2/Blok4/Project-X/klussenbank/packages/telescope-search/i18n/de.i18n.json","telescope-search//Users/lukasfeitsma/Documents/Studie/CMD/Jaar2/Blok4/Project-X/klussenbank/packages/telescope-search/i18n/en.i18n.json","telescope-search//Users/lukasfeitsma/Documents/Studie/CMD/Jaar2/Blok4/Project-X/klussenbank/packages/telescope-search/i18n/es.i18n.json","telescope-search//Users/lukasfeitsma/Documents/Studie/CMD/Jaar2/Blok4/Project-X/klussenbank/packages/telescope-search/i18n/fr.i18n.json","telescope-search//Users/lukasfeitsma/Documents/Studie/CMD/Jaar2/Blok4/Project-X/klussenbank/packages/telescope-search/i18n/it.i18n.json","telescope-search//Users/lukasfeitsma/Documents/Studie/CMD/Jaar2/Blok4/Project-X/klussenbank/packages/telescope-search/i18n/zh-CN.i18n.json"],"names":[],"mappings":";;;;;;;;AAAA,uC;AACA,iB;AACA,qB;AACA,Y;AACA,G;;AAEA,gB;AACA,qB;AACA,U;AACA,G;;AAEA,gB;AACA,sB;AACA,uB;AACA,kD;AACA,G;;AAEA,gE;;AAEA,8C;AACA,4B;AACA,U;AACA,mB;AACA,oB;AACA,M;AACA,gB;AACA,gB;AACA,M;AACA,c;AACA,kB;AACA,K;AACA,I;AACA,G;;AAEA,2B;AACA,kB;AACA,uB;AACA,uB;AACA,K;AACA,G;;AAEA,8B;AACA,0D;AACA,sF;AACA,wD;AACA,0B;;AAEA,qD;AACA,W;AACA,Y;AACA,sD;AACA,oD;AACA,oD;AACA,O;AACA,K;AACA,K;AACA,oB;AACA,C;;;;;;;;;;;;;;;;;;;ACzDA,kH;;AAEA,+D;AACA,gD;AACA,2C;AACA,4E;AACA,uH;;AAEA,qD;AACA,6B;AACA,yC;;;;;;;;;;;;;;;;;;;ACVA,4B;;AAEA,sD;AACA,mB;AACA,wB;AACA,0B;AACA,2E;AACA,M;AACA,gC;AACA,yC;AACA,M;AACA,gC;AACA,oC;AACA,yB;AACA,yG;AACA,yF;AACA,sG;AACA,uD;AACA,+C;AACA,8C;AACA,S;AACA,sB;AACA,2C;AACA,S;AACA,O;AACA,kB;AACA,K;AACA,K;;AAEA,mE;;AAEA,W;;AAEA,mC;AACA,mB;AACA,qC;AACA,K;;AAEA,gB;;AAEA,iC;AACA,gC;AACA,uB;AACA,yB;AACA,2C;AACA,2B;AACA,wC;AACA,O;AACA,iD;AACA,M;AACA,uB;AACA,wD;AACA,M;AACA,oB;AACA,K;;AAEA,G;;;;;;;;;;;;;;;;;;;;ACvDA,+B;AACA,kE;AACA,kB;AACA,8B;AACA,oD;AACA,iB;AACA,iC;AACA,2B;AACA,uG;AACA,O;AACA,+B;AACA,mB;AACA,qB;AACA,8B;AACA,+B;AACA,8D;AACA,Q;AACA,yB;AACA,8D;AACA,O;AACA,4B;AACA,K;AACA,I;;;;;;;;;;;;;;;;;;;ACvBA,qE;AACA,wB;AACA,gB;AACA,gC;AACA,yB;AACA,qC;AACA,I;AACA,K;;AAEA,4B;;AAEA,2C;AACA,4B;AACA,qC;AACA,M;AACA,8B;AACA,wC;AACA,M;AACA,mC;AACA,yD;AACA,K;AACA,K;;AAEA,0C;AACA,6D;AACA,yB;AACA,kC;AACA,iC;AACA,uB;AACA,+E;AACA,kC;AACA,uC;AACA,wD;AACA,c;AACA,qC;AACA,qG;AACA,yB;AACA,0C;;AAEA,oC;AACA,uC;AACA,+E;AACA,4C;AACA,6D;AACA,qC;AACA,W;AACA,0C;;AAEA,iB;AACA,O;AACA,K;AACA,K;;AAEA,G;;;;;;;;;;;;;;;;;;;;ACpDA,mC;AACA,0E;AACA,kB;AACA,2Q;AACA,4C;AACA,iB;AACA,gD;AACA,sD;AACA,mB;AACA,wC;AACA,qC;AACA,oC;AACA,oB;AACA,wC;AACA,8B;AACA,kD;AACA,0D;AACA,0C;AACA,+B;AACA,sD;AACA,8D;AACA,8D;AACA,+F;AACA,wD;AACA,0E;AACA,wD;AACA,qC;AACA,4C;AACA,+B;AACA,uB;AACA,yB;AACA,sB;AACA,4D;AACA,K;AACA,wC;AACA,6D;AACA,iB;AACA,I;;;;;;;;;;;;;;;;;;;ACtCA,4B;AACA,+C;AACA,0B;AACA,uD;AACA,M;AACA,0B;AACA,6D;AACA,yB;AACA,M;AACA,8B;AACA,qD;AACA,kE;AACA,iE;;AAEA,4B;AACA,oB;AACA,sB;AACA,qB;AACA,S;AACA,iB;AACA,M;AACA,4B;AACA,sH;AACA,M;AACA,6B;AACA,2D;AACA,8B;AACA,M;AACA,K;AACA,G;;;;;;;;;;;;;;;;;;AC7BA,6B;AACA,sC;AACA,mC;;AAEA,gC;AACA,yD;AACA,C;AACA,8E;;AAEA,oD;AACA,8C;;AAEA,yC;AACA,C;;;;;;;;;;;;;;;;;;;ACbA,6B;AACA,sC;AACA,mC;;AAEA,gC;AACA,yD;AACA,C;AACA,gD;AACA,kB;AACA,mK;AACA,gD;;;;;;;;;;;;;;;;;;;ACVA,6B;AACA,sC;AACA,mC;;AAEA,gC;AACA,yD;AACA,C;;;;;;;;;;;;;;;;;;;ACNA,6B;AACA,sC;AACA,mC;;AAEA,gC;AACA,yD;AACA,C;;;;;;;;;;;;;;;;;;;ACNA,6B;AACA,sC;AACA,mC;;AAEA,gC;AACA,yD;AACA,C;;;;;;;;;;;;;;;;;;;ACNA,6B;AACA,sC;AACA,mC;;AAEA,gC;AACA,yD;AACA,C","file":"/packages/telescope-search.js","sourcesContent":["// push \"search\" template to primaryNav\nprimaryNav.push({\n  template: 'search',\n  order: 100\n});\n\nmobileNav.push({\n  template: 'search',\n  order: 1\n});\n\nadminMenu.push({\n  route: 'searchLogs',\n  label: 'search_logs',\n  description: 'see_what_people_are_searching_for'\n});\n\nregisterElementColor('.search-field', 'secondaryContrastColor');\n\nSearches = new Meteor.Collection(\"searches\", {\n  schema: new SimpleSchema({\n    _id: {\n      type: String,\n      optional: true\n    },\n    timestamp: {\n      type: Date\n    },\n    keyword: {\n      type: String\n    }\n  })\n});\n\nMeteor.startup(function() {\n  Searches.allow({\n    update: isAdminById\n  , remove: isAdminById\n  });\n});\n\n// search post list parameters\nviewParameters.search = function (terms, baseParameters) {\n  // if query is empty, just return parameters that will result in an empty collection\n  if(typeof terms.query === 'undefined' || !terms.query)\n    return {find:{_id: 0}}\n\n  var parameters = deepExtend(true, baseParameters, {\n    find: {\n      $or: [\n        {title: {$regex: terms.query, $options: 'i'}},\n        {url: {$regex: terms.query, $options: 'i'}},\n        {body: {$regex: terms.query, $options: 'i'}}\n      ]\n    }\n  });\n  return parameters;\n}\n","TAPi18n.packages[\"telescope-search\"] = {\"translation_function_name\":\"__\",\"helper_name\":\"_\",\"namespace\":\"project\"};\n\n// define package's translation function (proxy to the i18next)\n__ = TAPi18n._getPackageI18nextProxy(\"project\");\n// define the package's templates registrar\nregisterI18nTemplate = TAPi18n._getRegisterHelpersProxy(\"telescope-search\");\nregisterTemplate = registerI18nTemplate; // XXX OBSOLETE, kept for backward compatibility will be removed in the future\n\n// Record the list of templates prior to package load\nvar _ = Package.underscore._;\nnon_package_templates = _.keys(Template);\n","Meteor.startup(function () {\n\n  PostsSearchController = PostsListController.extend({\n    view: 'search',\n    showViewsNav: false,\n    getTitle: function() {\n      return i18n.t(\"Search\") + ' - ' + Settings.get('title', \"Telescope\");\n    },\n    getDescription: function() {\n      return Settings.get('description');\n    },\n    onBeforeAction: function() {\n      var query = this.params.query;\n      if ('q' in query) {\n        // if search box has 'empty' class, that means user just deleted last character in search keyword\n        // but router hasn't updated url, so params.query still has '?q=<LAST CHARACTER>'\n        // if we set searchQuery in this case, user will see last character pops up again unexpectedly\n        // so add this check to fix the bug. issue #825\n        if (!$('.search').hasClass('empty'))  {\n          Session.set('searchQuery', query.q);\n        }\n        if (query.q) {\n          Meteor.call('logSearch', query.q)\n        }\n      }\n      this.next();\n    }\n  });\n\n  Router.onBeforeAction(Router._filters.isAdmin, {only: ['logs']});\n\n  // Search\n\n  Router.route('/search/:limit?', {\n    name: 'search',\n    controller: PostsSearchController\n  });\n\n  // Search Logs\n\n  Router.route('/logs/:limit?', {\n    controller: AdminController,\n    name: 'searchLogs',\n    waitOn: function () {\n      var limit = this.params.limit || 100;\n      if(Meteor.isClient) {\n        Session.set('logsLimit', limit);\n      }\n      return Meteor.subscribe('searches', limit);\n    },\n    data: function () {\n      return Searches.find({}, {sort: {timestamp: -1}});\n    },\n    fastRender: true\n  });\n\n});\n","\nTemplate.__checkName(\"search\");\nTemplate[\"search\"] = new Template(\"Template.search\", (function() {\n  var view = this;\n  return Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"canSearch\"));\n  }, function() {\n    return [ \"\\n    \", HTML.DIV({\n      \"class\": function() {\n        return [ \"search \", Spacebars.mustache(view.lookup(\"searchQueryEmpty\")), \" header-submodule\" ];\n      }\n    }, \"\\n      \", HTML.INPUT({\n      id: \"search\",\n      type: \"search\",\n      \"class\": \"search-field\",\n      placeholder: function() {\n        return Spacebars.mustache(view.lookup(\"_\"), \"search\");\n      },\n      value: function() {\n        return Spacebars.mustache(view.lookup(\"searchQuery\"));\n      }\n    }), \"\\n    \"), \"\\n  \" ];\n  });\n}));\n","// see: http://stackoverflow.com/questions/1909441/jquery-keyup-delay\nvar delay = (function(){\n  var timer = 0;\n  return function(callback, ms){\n    clearTimeout (timer);\n    timer = setTimeout(callback, ms);\n  };\n})();\n\nMeteor.startup(function () {\n\n  Template[getTemplate('search')].helpers({\n    canSearch: function () {\n      return can.view(Meteor.user());\n    },\n    searchQuery: function () {\n      return Session.get(\"searchQuery\");\n    },\n    searchQueryEmpty: function () {\n      return !!Session.get(\"searchQuery\") ? '' : 'empty';\n    }\n  });\n\n  Template[getTemplate('search')].events({\n    'keyup .search-field, search .search-field': function(e){\n      e.preventDefault();\n      var val = $(e.target).val(),\n          $search = $('.search');\n      if (val === '') {\n        // if search field is empty, just do nothing and show an empty template\n        $search.addClass('empty');\n        Session.set('searchQuery', '');\n        Router.go('search', null, {replaceState: true});\n      } else {\n        $search.removeClass('empty');\n        // if search field is not empty, add a delay to avoid firing new searches for every keystroke\n        delay(function(){\n          Session.set('searchQuery', val);\n\n          // Update the querystring.\n          var opts = {query: {q: val}};\n          // if we're already on the search page, do a replaceState. Otherwise,\n          // just use the pushState default.\n          if(Router.current().route.getName() === 'search') {\n            opts.replaceState = true;\n          }\n          Router.go('search', null, opts);\n\n        }, 700 );\n      }\n    }\n  });\n\n});\n","\nTemplate.__checkName(\"searchLogs\");\nTemplate[\"searchLogs\"] = new Template(\"Template.searchLogs\", (function() {\n  var view = this;\n  return [ HTML.Raw(\"<h2>Search Logs</h2>\\n    \"), HTML.TABLE(\"\\n      \", HTML.THEAD(\"\\n        \", HTML.TR(\"\\n          \", HTML.TH(\"Keyword\"), \"\\n          \", HTML.TH(\"Timestamp\"), \"\\n        \"), \"\\n      \"), \"\\n      \", HTML.TBODY(\"\\n      \", Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\".\"));\n  }, function() {\n    return [ \"\\n        \", Blaze.If(function() {\n      return Spacebars.call(view.lookup(\"isNewDate\"));\n    }, function() {\n      return [ \"\\n          \", HTML.TR({\n        \"class\": \"search-date-header\"\n      }, \"\\n            \", HTML.TH({\n        colspan: \"2\"\n      }, \"\\n              \", HTML.SPAN({\n        \"class\": \"search-date\"\n      }, Blaze.View(\"lookup:getDate\", function() {\n        return Spacebars.mustache(view.lookup(\"getDate\"));\n      })), \"\\n              \", HTML.SPAN({\n        \"class\": \"search-count\"\n      }, Blaze.View(\"lookup:searchCount\", function() {\n        return Spacebars.mustache(view.lookup(\"searchCount\"));\n      })), \"\\n            \"), \"\\n          \"), \"\\n        \" ];\n    }), \"\\n        \", HTML.TR(\"\\n          \", HTML.TD(Blaze.View(\"lookup:keyword\", function() {\n      return Spacebars.mustache(view.lookup(\"keyword\"));\n    })), \"\\n          \", HTML.TD(Blaze.View(\"lookup:getTime\", function() {\n      return Spacebars.mustache(view.lookup(\"getTime\"));\n    })), \"\\n        \"), \"\\n      \" ];\n  }), \"\\n    \"), \"\\n  \"), \"\\n  \", HTML.DIV({\n    \"class\": \"grid more-button\"\n  }, \"\\n    \", HTML.A({\n    \"class\": \"more-link\",\n    href: function() {\n      return Spacebars.mustache(view.lookup(\"loadMoreUrl\"));\n    }\n  }, Blaze.View(\"lookup:_\", function() {\n    return Spacebars.mustache(view.lookup(\"_\"), \"load_more\");\n  })), \"\\n  \") ];\n}));\n","Meteor.startup(function () {\n  Template[getTemplate('searchLogs')].helpers({\n    getTime: function () {\n      return moment(this.timestamp).format(\"HH:mm:ss\");\n    },\n    getDate: function () {\n      currentDate = moment(this.timestamp).format(\"MMMM DD\");\n      return currentDate;\n    },\n    searchCount: function () {\n      // TODO: doesn't work properly with \"load more\"\n      var after = moment(this.timestamp).startOf('day').valueOf(),\n          before = moment(this.timestamp).endOf('day').valueOf();\n\n      return Searches.find({\n        timestamp: {\n          $gte: after,\n          $lt: before\n        }\n      }).count();\n    },\n    isNewDate: function () {\n      return (typeof currentDate === 'undefined') ? true : (currentDate !== moment(this.timestamp).format(\"MMMM DD\"));\n    },\n    loadMoreUrl: function() {\n      var count = parseInt(Session.get('logsLimit')) + 100;\n      return '/logs/' + count;\n    },\n  });\n});","var _ = Package.underscore._,\n    package_name = \"telescope-search\",\n    namespace = \"telescope-search\";\n\nif (package_name != \"project\") {\n    namespace = TAPi18n.packages[package_name].namespace;\n}\nvar package_templates = _.difference(_.keys(Template), non_package_templates);\n\nfor (var i = 0; i < package_templates.length; i++) {\n  var package_template = package_templates[i];\n\n  registerI18nTemplate(package_template);\n}\n","var _ = Package.underscore._,\n    package_name = \"telescope-search\",\n    namespace = \"telescope-search\";\n\nif (package_name != \"project\") {\n    namespace = TAPi18n.packages[package_name].namespace;\n}\n// integrate the fallback language translations \ntranslations = {};\ntranslations[namespace] = {\"load_more\":\"Laad meer\",\"search\":\"Zoeken\",\"search_logs\":\"Zoeklog\",\"see_what_people_are_searching_for\":\"Zie waar gebruikers op zoeken.\"};\nTAPi18n._loadLangFileObject(\"en\", translations);\n","var _ = Package.underscore._,\n    package_name = \"telescope-search\",\n    namespace = \"telescope-search\";\n\nif (package_name != \"project\") {\n    namespace = TAPi18n.packages[package_name].namespace;\n}\n","var _ = Package.underscore._,\n    package_name = \"telescope-search\",\n    namespace = \"telescope-search\";\n\nif (package_name != \"project\") {\n    namespace = TAPi18n.packages[package_name].namespace;\n}\n","var _ = Package.underscore._,\n    package_name = \"telescope-search\",\n    namespace = \"telescope-search\";\n\nif (package_name != \"project\") {\n    namespace = TAPi18n.packages[package_name].namespace;\n}\n","var _ = Package.underscore._,\n    package_name = \"telescope-search\",\n    namespace = \"telescope-search\";\n\nif (package_name != \"project\") {\n    namespace = TAPi18n.packages[package_name].namespace;\n}\n"]}