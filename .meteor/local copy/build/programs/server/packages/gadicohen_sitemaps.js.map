{"version":3,"file":"/packages/gadicohen:sitemaps.js","sources":["gadicohen:sitemaps/sitemaps.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,E;AACA,wC;AACA,qC;AACA,G;;AAEA,Y;AACA,U;AACA,E;;AAEA,yC;AACA,4C;AACA,iB;AACA,8B;AACA,iC;AACA,sB;AACA,K;AACA,e;AACA,I;AACA,C;;AAEA,oC;AACA,0B;AACA,mD;AACA,C;;AAEA,0E;AACA,kC;AACA,qD;AACA,wB;AACA,iB;AACA,yB;;AAEA,iC;AACA,mC;AACA,oB;AACA,E;AACA,mC;AACA,4B;AACA,sB;AACA,+B;AACA,yE;;AAEA,sE;AACA,a;AACA,wB;;AAEA,4B;AACA,kC;;AAEA,wB;AACA,2D;;AAEA,yB;AACA,sC;AACA,mD;AACA,gD;AACA,2C;AACA,4C;AACA,8C;AACA,oD;AACA,gE;AACA,O;;AAEA,0B;AACA,wE;;AAEA,wB;AACA,kE;;AAEA,4B;AACA,gC;AACA,wC;AACA,8C;AACA,gD;AACA,sC;AACA,wB;AACA,8C;AACA,+B;AACA,6D;AACA,8B;AACA,W;AACA,O;;AAEA,gD;AACA,2B;AACA,yB;AACA,iC;AACA,qC;AACA,sC;;AAEA,6C;AACA,gD;;AAEA,mC;AACA,qD;AACA,kD;AACA,sF;AACA,a;;AAEA,iD;AACA,a;AACA,S;AACA,S;;AAEA,8B;AACA,O;;AAEA,yB;;AAEA,yD;AACA,2D;AACA,sE;;AAEA,yB;AACA,iE;AACA,yB;AACA,oF;AACA,yB;AACA,oF;AACA,oB;;AAEA,uB;;AAEA,4D;AACA,yB;AACA,W;AACA,W;AACA,G;;AAEA,oC;AACA,iB;AACA,qB;;AAEA,4B;AACA,gD;AACA,E;;AAEA,E;AACA,yC;AACA,sB;AACA,sD;AACA,U;AACA,iD;AACA,wE;AACA,sF;AACA,I;AACA,G;AACA,E","sourcesContent":["/*\n * http://en.wikipedia.org/wiki/Site_map\n * http://www.sitemaps.org/index.html\n */\n\nsitemaps = {\n  list: {}\n};\n\nif (typeof Number.lpad === \"undefined\") {\n  Number.prototype.lpad = function(length) {\n    \"use strict\";\n    var str = this.toString();\n    while (str.length < length) {\n      str = \"0\" + str;\n    }\n    return str;\n  };\n}\n\nvar urlStart = Meteor.absoluteUrl();\nfunction prepareUrl(url) {\n  return urlStart + escape(url.replace(/^\\//, ''));\n}\n\n// TODO: 1) gzip, 2) sitemap index + other types + sitemap for old content\nvar Fiber = Npm.require('fibers');\nWebApp.connectHandlers.use(function(req, res, next) {\n  new Fiber(function() {\n    \"use strict\";\n    var out, pages, urls;\n\n    urls = _.keys(sitemaps.list);\n    if (!_.contains(urls, req.url))\n      return next();\n  \n    pages = sitemaps.list[req.url];\n    if (_.isFunction(pages))\n      pages = pages();\n    else if (!_.isArray(pages))\n      throw new TypeError(\"sitemaps.add() expects an array or function\");\n\n    // The header is added later once we know which namespaces we need\n    out = '';\n    var namespaces = {};\n\n    var w3cDateTimeTS, date;\n    _.each(pages, function(page) {\n\n      out += '  <url>\\n'\n        + '    <loc>' + prepareUrl(page.page) + '</loc>\\n';\n\n      if (page.lastmod) {\n        date = new Date(page.lastmod);\n        w3cDateTimeTS = date.getUTCFullYear() + '-'\n          + (date.getUTCMonth()+1).lpad(2) + '-'\n          + date.getUTCDate().lpad(2) + 'T'\n          + date.getUTCHours().lpad(2) + ':'\n          + date.getUTCMinutes().lpad(2) + ':'\n          + date.getUTCSeconds().lpad(2) + '+00:00';\n        out += '    <lastmod>' + w3cDateTimeTS + '</lastmod>\\n';\n      }\n\n      if (page.changefreq)\n        out += '    <changefreq>' + page.changefreq + '</changefreq>\\n';\n\n      if (page.priority)\n        out += '    <priority>' + page.priority + '</priority>\\n';\n\n      if (page.xhtmlLinks) {\n        namespaces.xhtml = true;\n        if (!_.isArray(page.xhtmlLinks))\n          page.xhtmlLinks = [page.xhtmlLinks];\n        _.each(page.xhtmlLinks, function(link) {\n          out += '    <xhtml:link \\n';\n          if (link.href)\n            link.href = prepareUrl(link.href);\n          for (var key in link)\n            out += '      ' + key + '=\"' + link[key] + '\"\\n';\n          out += '      />\\n';\n        });\n      }\n\n      _.each(['image', 'video'], function(tag) {\n        var tagS = tag+'s';\n        if (page[tagS]) {\n          namespaces[tag] = true;\n          if (!_.isArray(page[tagS]))\n            page[tagS] = [page[tagS]];\n\n          _.each(page[tagS], function(data) {\n            out += '      <'+tag+':'+tag+'> \\n';\n\n            for (var key in data) {\n              if (key == 'loc' || key.match(/_loc$/))\n                data[key] = prepareUrl(data[key]);\n              out += '        <'+tag+':'+key+'>' + data[key] + '</'+tag+':'+key+'>\\n';\n            }\n\n            out += '      </'+tag+':'+tag+'> \\n';\n          });\n        }\n      });\n\n      out  += '   </url>\\n\\n';\n    });\n\n    out += '</urlset>\\n';\n\n    // We do this last so we know which namesapces to add\n    var header = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n'\n      + '<urlset xmlns=\"http://www.sitemaps.org/schemas/sitemap/0.9\"';\n\n    if (namespaces.xhtml)\n      header += '\\n  xmlns:xhtml=\"http://www.w3.org/1999/xhtml\"';\n    if (namespaces.image)\n      header += '\\n  xmlns:image=\"http://www.google.com/schemas/sitemap-image/1.1\"';\n    if (namespaces.video)\n      header += '\\n  xmlns:video=\"http://www.google.com/schemas/sitemap-video/1.1\"';\n    header += '>\\n';\n\n    out = header + out;\n\n    res.writeHead(200, {'Content-Type': 'application/xml'});\n    res.end(out, 'utf8');\n    return;\n  }).run();\n});\n\nsitemaps.add = function(url, func) {\n  \"use strict\";  \n  check(url, String);\n\n  sitemaps.list[url] = func;\n  robots.addLine('Sitemap: ' + prepareUrl(url));\n};\n\n/*\nsitemaps.add('/sitemap.xml', function() {\n  // 'page' is reqired\n  // 'lastmod', 'changefreq', 'priority' are optional.\n  return [\n    { page: 'x', lastmod: new Date().getTime() },\n    { page: 'y', lastmod: new Date().getTime(), changefreq: 'monthly' },\n    { page: 'z', lastmod: new Date().getTime(), changefreq: 'monthly', priority: 0.8 }\n  ];\n});\n*/\n"]}