{"version":3,"sources":["telescope-singleday//Users/lukasfeitsma/Documents/Studie/CMD/Jaar2/Blok4/Project-X/klussenbank/packages/telescope-singleday/package-tap.i18n","telescope-singleday/lib/routes.js","telescope-singleday/lib/singleday.js","telescope-singleday/lib/client/templates/single_day.html","telescope-singleday/lib/client/templates/single_day.js","telescope-singleday/lib/client/templates/single_day_nav.html","telescope-singleday/lib/client/templates/single_day_nav.js","telescope-singleday//Users/lukasfeitsma/Documents/Studie/CMD/Jaar2/Blok4/Project-X/klussenbank/packages/telescope-singleday/i18n/bg.i18n.json","telescope-singleday//Users/lukasfeitsma/Documents/Studie/CMD/Jaar2/Blok4/Project-X/klussenbank/packages/telescope-singleday/i18n/de.i18n.json","telescope-singleday//Users/lukasfeitsma/Documents/Studie/CMD/Jaar2/Blok4/Project-X/klussenbank/packages/telescope-singleday/i18n/en.i18n.json","telescope-singleday//Users/lukasfeitsma/Documents/Studie/CMD/Jaar2/Blok4/Project-X/klussenbank/packages/telescope-singleday/i18n/es.i18n.json","telescope-singleday//Users/lukasfeitsma/Documents/Studie/CMD/Jaar2/Blok4/Project-X/klussenbank/packages/telescope-singleday/i18n/fr.i18n.json","telescope-singleday//Users/lukasfeitsma/Documents/Studie/CMD/Jaar2/Blok4/Project-X/klussenbank/packages/telescope-singleday/i18n/it.i18n.json","telescope-singleday//Users/lukasfeitsma/Documents/Studie/CMD/Jaar2/Blok4/Project-X/klussenbank/packages/telescope-singleday/i18n/tr.i18n.json","telescope-singleday//Users/lukasfeitsma/Documents/Studie/CMD/Jaar2/Blok4/Project-X/klussenbank/packages/telescope-singleday/i18n/zh-CN.i18n.json"],"names":[],"mappings":";;;;;;;;AAAA,qH;;AAEA,+D;AACA,gD;AACA,2C;AACA,+E;AACA,uH;;AAEA,qD;AACA,6B;AACA,yC;;;;;;;;;;;;;;;;;;;ACVA,6B;;AAEA,mD;;AAEA,qC;;AAEA,+B;AACA,iE;AACA,gB;AACA,I;;AAEA,oB;AACA,gI;AACA,4C;AACA,I;;AAEA,yB;AACA,gC;AACA,I;;AAEA,+B;AACA,2C;AACA,I;;AAEA,kB;;AAEA,G;;AAEA,4B;;AAEA,W;;AAEA,0C;AACA,2B;AACA,wC;AACA,K;;AAEA,wB;AACA,kC;AACA,wC;AACA,K;;AAEA,G;;;;;;;;;;;;;;;;;;;AC1CA,gB;AACA,iC;AACA,qB;AACA,sC;AACA,G;;AAEA,6C;AACA,U;AACA,W;AACA,iB;AACA,0B;AACA,yB;AACA,O;AACA,M;AACA,c;AACA,mC;AACA,K;AACA,I;AACA,E;;AAEA,8B;AACA,wC;AACA,wB;AACA,8B;AACA,sB;AACA,K;AACA,E;;;;;;;;;;;;;;;;;;;ACzBA,kC;AACA,wE;AACA,kB;AACA,gC;AACA,sD;AACA,iB;AACA,uD;AACA,c;AACA,6D;AACA,Q;AACA,mB;AACA,2C;AACA,kD;AACA,S;AACA,iB;AACA,8C;AACA,Y;AACA,0D;AACA,kD;AACA,M;AACA,iB;AACA,yC;AACA,gD;AACA,O;AACA,O;AACA,I;;;;;;;;;;;;;;;;;;;AC1BA,wE;;AAEA,qD;AACA,mE;;AAEA,0D;;AAEA,sB;;AAEA,sB;;AAEA,sC;AACA,4C;AACA,0E;AACA,+C;;AAEA,mC;AACA,2E;AACA,iH;AACA,Y;AACA,wB;AACA,yD;AACA,uD;AACA,M;AACA,I;;AAEA,e;;AAEA,uD;AACA,0D;AACA,gC;AACA,oG;AACA,iD;AACA,8D;AACA,K;;AAEA,sD;AACA,gC;;AAEA,oC;;AAEA,yB;AACA,4C;;AAEA,2D;;AAEA,gB;AACA,iE;AACA,sE;;AAEA,wD;AACA,iE;;AAEA,8D;AACA,4C;AACA,oC;;AAEA,Y;;AAEA,qC;AACA,8D;;AAEA,K;AACA,K;;AAEA,c;;AAEA,wC;AACA,qE;AACA,yF;AACA,qD;AACA,2D;AACA,I;;AAEA,E;;AAEA,4C;AACA,4B;AACA,+E;AACA,I;AACA,6B;AACA,uC;AACA,I;AACA,2B;AACA,qC;AACA,I;AACA,wB;AACA,0C;AACA,uC;AACA,gD;;AAEA,mB;;AAEA,qB;AACA,+B;;AAEA,2D;AACA,4C;;AAEA,oD;AACA,qE;;AAEA,gD;AACA,4C;AACA,+B;;AAEA,mF;AACA,8C;AACA,4C;AACA,kD;AACA,uC;AACA,Q;;AAEA,6B;AACA,kC;;AAEA,M;;AAEA,mB;AACA,G;AACA,G;;;;;;;;;;;;;;;;;;;;ACvHA,qC;AACA,8E;AACA,kB;AACA,mB;AACA,mB;AACA,yB;AACA,yB;AACA,oC;AACA,2D;AACA,iB;AACA,+B;AACA,wB;AACA,kE;AACA,Q;AACA,0B;AACA,0C;AACA,kE;AACA,sB;AACA,6D;AACA,0D;AACA,uC;AACA,uD;AACA,iB;AACA,+B;AACA,wB;AACA,8D;AACA,Q;AACA,0B;AACA,0C;AACA,8D;AACA,oB;AACA,yB;AACA,I;;;;;;;;;;;;;;;;;;;ACjCA,2D;;AAEA,2F;;AAEA,sE;AACA,gD;;AAEA,+C;AACA,4C;AACA,K;;AAEA,gD;AACA,qE;AACA,8C;AACA,K;;AAEA,E;;AAEA,+C;AACA,0B;AACA,yD;AACA,mC;AACA,+C;AACA,qB;AACA,6B;AACA,K;AACA,qB;AACA,iC;AACA,K;AACA,oD;AACA,I;AACA,8B;AACA,yD;AACA,kD;AACA,+B;AACA,I;AACA,+B;AACA,W;AACA,gB;AACA,I;AACA,0B;AACA,yD;AACA,6C;AACA,+B;AACA,I;AACA,2B;AACA,wE;AACA,kD;AACA,2E;AACA,G;AACA,E;;;;;;;;;;;;;;;;;;AClDA,6B;AACA,yC;AACA,sC;;AAEA,gC;AACA,yD;AACA,C;AACA,8E;;AAEA,oD;AACA,8C;;AAEA,yC;AACA,C;;;;;;;;;;;;;;;;;;;ACbA,6B;AACA,yC;AACA,sC;;AAEA,gC;AACA,yD;AACA,C;;;;;;;;;;;;;;;;;;;ACNA,6B;AACA,yC;AACA,sC;;AAEA,gC;AACA,yD;AACA,C;AACA,gD;AACA,kB;AACA,+X;AACA,gD;;;;;;;;;;;;;;;;;;;ACVA,6B;AACA,yC;AACA,sC;;AAEA,gC;AACA,yD;AACA,C;;;;;;;;;;;;;;;;;;;ACNA,6B;AACA,yC;AACA,sC;;AAEA,gC;AACA,yD;AACA,C;;;;;;;;;;;;;;;;;;;ACNA,6B;AACA,yC;AACA,sC;;AAEA,gC;AACA,yD;AACA,C;;;;;;;;;;;;;;;;;;;ACNA,6B;AACA,yC;AACA,sC;;AAEA,gC;AACA,yD;AACA,C;;;;;;;;;;;;;;;;;;;ACNA,6B;AACA,yC;AACA,sC;;AAEA,gC;AACA,yD;AACA,C","file":"/packages/telescope-singleday.js","sourcesContent":["TAPi18n.packages[\"telescope-singleday\"] = {\"translation_function_name\":\"__\",\"helper_name\":\"_\",\"namespace\":\"project\"};\n\n// define package's translation function (proxy to the i18next)\n__ = TAPi18n._getPackageI18nextProxy(\"project\");\n// define the package's templates registrar\nregisterI18nTemplate = TAPi18n._getRegisterHelpersProxy(\"telescope-singleday\");\nregisterTemplate = registerI18nTemplate; // XXX OBSOLETE, kept for backward compatibility will be removed in the future\n\n// Record the list of templates prior to package load\nvar _ = Package.underscore._;\nnon_package_templates = _.keys(Template);\n","// Controller for post digest\n\nPostsSingledayController = RouteController.extend({\n\n  template: getTemplate('singleDay'),\n\n  onBeforeAction: function () {\n    this.render(getTemplate('postListTop'), {to: 'postListTop'});\n    this.next();\n  },\n\n  data: function() {\n    var currentDate = this.params.day ? new Date(this.params.year, this.params.month-1, this.params.day) : Session.get('today');\n    Session.set('currentDate', currentDate);\n  },\n\n  getTitle: function () {\n    return i18n.t('single_day');\n  },\n\n  getDescription: function () {\n    return i18n.t('posts_of_a_single_day');\n  },\n\n  fastRender: true\n\n});\n\nMeteor.startup(function () {\n\n  // Digest\n\n  Router.route('/day/:year/:month/:day', {\n    name: 'postsSingleDay',\n    controller: PostsSingledayController\n  });\n\n  Router.route('/day', {\n    name: 'postsSingleDayDefault',\n    controller: PostsSingledayController\n  });\n\n});\n","viewsMenu.push({\n  route: 'postsSingleDayDefault',\n  label: 'singleday',\n  description: 'posts_of_a_single_day'\n});\n\nviewParameters.singleday = function (terms) {\n  return {\n    find: {\n      postedAt: {\n        $gte: terms.after,\n        $lt: terms.before\n      }\n    },\n    options: {\n      sort: {sticky: -1, score: -1}\n    }\n  };\n};\n\ngetDateURL = function(moment){\n  return Router.path('postsSingleDay', {\n    year: moment.year(),\n    month: moment.month() + 1,\n    day: moment.date()\n  });\n};","\nTemplate.__checkName(\"singleDay\");\nTemplate[\"singleDay\"] = new Template(\"Template.singleDay\", (function() {\n  var view = this;\n  return [ Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"showDateNav\"));\n  }, function() {\n    return [ \"\\n    \", Blaze._TemplateWith(function() {\n      return {\n        template: Spacebars.call(view.lookup(\"singleDayNav\"))\n      };\n    }, function() {\n      return Spacebars.include(function() {\n        return Spacebars.call(Template.__dynamic);\n      });\n    }), \"\\n  \" ];\n  }), \"\\n  \", Blaze._TemplateWith(function() {\n    return {\n      template: Spacebars.call(view.lookup(\"posts_list\")),\n      data: Spacebars.call(view.lookup(\"context\"))\n    };\n  }, function() {\n    return Spacebars.include(function() {\n      return Spacebars.call(Template.__dynamic);\n    });\n  }) ];\n}));\n","// see https://www.discovermeteor.com/blog/template-level-subscriptions/\n\n// this template acts as the controller that sets and\n// manages the reactive context for the embedded postsList template\n\nTemplate[getTemplate('singleDay')].created = function () {\n\n  // 1. Initialization\n\n  var instance = this;\n\n  // initialize the reactive variables\n  instance.postsLoaded = new ReactiveVar(0);\n  instance.postsLimit = new ReactiveVar(Settings.get('postsPerPage', 10));\n  instance.postsReady = new ReactiveVar(false);\n\n  instance.getTerms = function () {\n    // if instance has a set date use this, else depend on Session variable\n    var currentDate = (!!instance.data && !!instance.data.date) ? instance.data.date: Session.get('currentDate');\n    return {\n      view: 'singleday',\n      after: moment(currentDate).startOf('day').toDate(),\n      before: moment(currentDate).endOf('day').toDate()\n    };\n  };\n\n  // 2. Autorun\n\n  // this autorun is there just to reset the post limit\n  // when current date changes (i.e. we're switching page)\n  instance.autorun(function () {\n    // just by including this session variable in the autorun, we automatically make it depend on it\n    var currentDate = Session.get('currentDate');\n    instance.postsLimit.set(Settings.get('postsPerPage', 10));\n  });\n\n  // will re-run when postsLimit or currentDate change\n  instance.autorun(function () {\n\n    var terms = instance.getTerms();\n\n    // get the postsLimit\n    terms.limit = instance.postsLimit.get();\n\n    // console.log(\"Asking for \" + terms.limit + \" postsâ€¦\")\n\n    // subscribe\n    var postsSubscription = Meteor.subscribe('postsList', terms);\n    var usersSubscription = Meteor.subscribe('postsListUsers', terms);\n\n    // if subscriptions are ready, set limit to newLimit\n    if (postsSubscription.ready() && usersSubscription.ready()) {\n\n      // console.log(\"> Received \"+terms.limit+\" posts. \\n\\n\")\n      instance.postsLoaded.set(terms.limit);\n      instance.postsReady.set(true);\n\n    } else {\n\n      instance.postsReady.set(false);\n      // console.log(\"> Subscription is not ready yet. \\n\\n\");\n\n    }\n  });\n\n  // 3. Cursor\n\n  instance.getPostsCursor = function() {\n    // console.log('loaded ' + instance.postsLoaded.get() + ' posts')\n    var termsLoaded = _.extend(instance.getTerms(), {limit: instance.postsLoaded.get()});\n    var parameters = getPostsParameters(termsLoaded);\n    return Posts.find(parameters.find, parameters.options);\n  };\n\n};\n\nTemplate[getTemplate('singleDay')].helpers({\n  showDateNav: function () {\n    return (typeof this.showDateNav === 'undefined') ? true : this.showDateNav;\n  },\n  singleDayNav: function () {\n    return getTemplate('singleDayNav');\n  },\n  posts_list: function () {\n    return getTemplate('posts_list');\n  },\n  context: function () {\n    // create context for postsList module\n    var instance = Template.instance();\n    var postsCursor = instance.getPostsCursor();\n\n    var context = {\n\n      // posts cursor\n      postsCursor: postsCursor,\n\n      // posts subscription readiness, used to show spinner\n      postsReady: instance.postsReady.get(),\n\n      // whether to show the load more button or not\n      hasMorePosts: postsCursor.count() >= instance.postsLimit.get(),\n\n      // what to do when user clicks \"load more\"\n      loadMoreHandler: function (instance) {\n        event.preventDefault();\n\n        // get current value for limit, i.e. how many posts are currently displayed\n        var limit = instance.postsLimit.get();\n        // increase limit by 5 and update it\n        limit += Settings.get('postsPerPage', 10);\n        instance.postsLimit.set(limit);\n      },\n\n      // the current instance\n      controllerInstance: instance\n\n    };\n\n    return context;\n  }\n});\n","\nTemplate.__checkName(\"singleDayNav\");\nTemplate[\"singleDayNav\"] = new Template(\"Template.singleDayNav\", (function() {\n  var view = this;\n  return HTML.DIV({\n    \"class\": \"grid\"\n  }, \"\\n    \", HTML.DIV({\n    \"class\": \"grid-block\"\n  }, \"\\n    \", Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"showPreviousDate\"));\n  }, function() {\n    return [ \"\\n    \", HTML.A({\n      href: function() {\n        return Spacebars.mustache(view.lookup(\"previousDateURL\"));\n      },\n      \"class\": \"prev-link\"\n    }, Blaze.View(\"lookup:_\", function() {\n      return Spacebars.mustache(view.lookup(\"_\"), \"previous_day\");\n    })), \" |\\n    \" ];\n  }), \"\\n    \", Blaze.View(\"lookup:currentDate\", function() {\n    return Spacebars.mustache(view.lookup(\"currentDate\"));\n  }), \" |\\n    \", Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"showNextDate\"));\n  }, function() {\n    return [ \"\\n    \", HTML.A({\n      href: function() {\n        return Spacebars.mustache(view.lookup(\"nextDateURL\"));\n      },\n      \"class\": \"next-link\"\n    }, Blaze.View(\"lookup:_\", function() {\n      return Spacebars.mustache(view.lookup(\"_\"), \"next_day\");\n    })), \"\\n    \" ];\n  }), \"\\n    \"), \"\\n  \");\n}));\n","Template[getTemplate('singleDayNav')].created = function(){\n\n  $(document).unbind('keyup'); //remove any potential existing bindings to avoid duplicates\n\n  var currentDate = moment(Session.get('currentDate')).startOf('day');\n  var today = moment(new Date()).startOf('day');\n\n  $(document).bind('keyup', 'left', function(){\n    Router.go($('.prev-link').attr('href'));\n  });\n\n  $(document).bind('keyup', 'right', function(){\n    if(isAdmin(Meteor.user()) || today.diff(currentDate, 'days') > 0)\n      Router.go($('.next-link').attr('href'));\n  });\n\n};\n\nTemplate[getTemplate('singleDayNav')].helpers({\n  currentDate: function(){\n    var currentDate = moment(Session.get('currentDate'));\n    var today = moment(new Date());\n    var diff = today.diff(currentDate, 'days');\n    if (diff === 0) {\n      return i18n.t(\"today\");\n    }\n    if (diff === 1) {\n      return i18n.t(\"yesterday\");\n    }\n    return currentDate.format(\"dddd, MMMM Do YYYY\");\n  },\n  previousDateURL: function(){\n    var currentDate = moment(Session.get('currentDate'));\n    var newDate = currentDate.subtract(1, 'days');\n    return getDateURL(newDate);\n  },\n  showPreviousDate: function(){\n    // TODO\n    return true;\n  },\n  nextDateURL: function(){\n    var currentDate = moment(Session.get('currentDate'));\n    var newDate = currentDate.add(1, 'days');\n    return getDateURL(newDate);\n  },\n  showNextDate: function(){\n    var currentDate = moment(Session.get('currentDate')).startOf('day');\n    var today = moment(new Date()).startOf('day');\n    return isAdmin(Meteor.user()) || (today.diff(currentDate, 'days') > 0);\n  }\n})","var _ = Package.underscore._,\n    package_name = \"telescope-singleday\",\n    namespace = \"telescope-singleday\";\n\nif (package_name != \"project\") {\n    namespace = TAPi18n.packages[package_name].namespace;\n}\nvar package_templates = _.difference(_.keys(Template), non_package_templates);\n\nfor (var i = 0; i < package_templates.length; i++) {\n  var package_template = package_templates[i];\n\n  registerI18nTemplate(package_template);\n}\n","var _ = Package.underscore._,\n    package_name = \"telescope-singleday\",\n    namespace = \"telescope-singleday\";\n\nif (package_name != \"project\") {\n    namespace = TAPi18n.packages[package_name].namespace;\n}\n","var _ = Package.underscore._,\n    package_name = \"telescope-singleday\",\n    namespace = \"telescope-singleday\";\n\nif (package_name != \"project\") {\n    namespace = TAPi18n.packages[package_name].namespace;\n}\n// integrate the fallback language translations \ntranslations = {};\ntranslations[namespace] = {\"the_top_5_posts_of_each_day\":\"The top 5 posts of each day.\",\"previous_day\":\"Previous Day\",\"next_day\":\"Next Day\",\"sorry_no_posts_for_today\":\"Sorry, no posts for today\",\"sorry_no_posts_for\":\"Sorry, no posts for\",\"today\":\"Today\",\"yesterday\":\"Yesterday\",\"single_day\":\"Single Day\",\"singleday\":\"Single Day\",\"posts_of_a_single_day\":\"The posts of a single day.\"};\nTAPi18n._loadLangFileObject(\"en\", translations);\n","var _ = Package.underscore._,\n    package_name = \"telescope-singleday\",\n    namespace = \"telescope-singleday\";\n\nif (package_name != \"project\") {\n    namespace = TAPi18n.packages[package_name].namespace;\n}\n","var _ = Package.underscore._,\n    package_name = \"telescope-singleday\",\n    namespace = \"telescope-singleday\";\n\nif (package_name != \"project\") {\n    namespace = TAPi18n.packages[package_name].namespace;\n}\n","var _ = Package.underscore._,\n    package_name = \"telescope-singleday\",\n    namespace = \"telescope-singleday\";\n\nif (package_name != \"project\") {\n    namespace = TAPi18n.packages[package_name].namespace;\n}\n","var _ = Package.underscore._,\n    package_name = \"telescope-singleday\",\n    namespace = \"telescope-singleday\";\n\nif (package_name != \"project\") {\n    namespace = TAPi18n.packages[package_name].namespace;\n}\n","var _ = Package.underscore._,\n    package_name = \"telescope-singleday\",\n    namespace = \"telescope-singleday\";\n\nif (package_name != \"project\") {\n    namespace = TAPi18n.packages[package_name].namespace;\n}\n"]}