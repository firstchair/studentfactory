)]}'
{"version":3,"sources":["telescope-post-by-feed/lib/feeds.js","telescope-post-by-feed/lib/client/routes.js","telescope-post-by-feed/lib/client/templates/feeds.js","telescope-post-by-feed/lib/client/templates/feeds.html","telescope-post-by-feed/lib/client/templates/feed_item.js","telescope-post-by-feed/lib/client/templates/feed_item.html","telescope-post-by-feed//Users/lukasfeitsma/Documents/Studie/CMD/Jaar2/Blok4/Project-X/studentfactory/packages/telescope-post-by-feed/i18n/en.i18n.json"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,mC;AACA,Q;AACA,iB;AACA,iC;AACA,I;AACA,W;AACA,iB;AACA,sB;AACA,e;AACA,2D;AACA,4B;AACA,6D;AACA,kB;AACA,4B;AACA,uC;AACA,Y;AACA,W;AACA,qB;AACA,O;AACA,K;AACA,I;AACA,e;AACA,mB;AACA,wB;AACA,mB;AACA,e;AACA,+D;AACA,qB;AACA,qB;AACA,4B;AACA,oE;AACA,kB;AACA,gC;AACA,gC;AACA,Y;AACA,W;AACA,0B;AACA,O;AACA,K;AACA,G;AACA,G;;AAEA,uC;AACA,+B;;AAEA,4D;AACA,sB;AACA,yB;AACA,mB;AACA,iB;AACA,oB;AACA,mB;AACA,e;AACA,gB;AACA,K;AACA,G;AACA,C;AACA,qC;;AAEA,8C;AACA,0B;AACA,6B;AACA,mB;AACA,iB;AACA,wB;AACA,mB;AACA,e;AACA,gB;AACA,K;AACA,G;AACA,C;AACA,yC;;AAEA,4B;AACA,e;AACA,wB;AACA,wB;AACA,uB;AACA,K;;AAEA,kB;AACA,kC;AACA,iC;;AAEA,+C;AACA,gF;;AAEA,oD;AACA,gH;;AAEA,mC;AACA,K;AACA,K;AACA,G;;;;;;;;;;;;;;;;;;;AC7FA,gB;AACA,iB;AACA,iB;AACA,4C;AACA,G;;AAEA,4B;;AAEA,oE;AACA,E;AACA,mB;;AAEA,0B;AACA,kB;AACA,gC;AACA,wB;AACA,c;AACA,kC;AACA,0C;AACA,sC;AACA,Q;AACA,M;AACA,qC;AACA,K;;AAEA,G;;;;;;;;;;;;;;;;;;;ACzBA,4B;AACA,0C;AACA,sB;AACA,8C;AACA,M;AACA,2B;AACA,qC;AACA,K;AACA,K;AACA,G;;;;;;;;;;;;;;;;;;;;ACRA,8B;AACA,gE;AACA,kB;AACA,qB;AACA,iC;AACA,6F;AACA,Y;AACA,0C;AACA,2C;AACA,qC;AACA,qD;AACA,oD;AACA,2C;AACA,M;AACA,iB;AACA,+D;AACA,8C;AACA,gD;AACA,iB;AACA,uD;AACA,c;AACA,yD;AACA,Q;AACA,mB;AACA,2C;AACA,kD;AACA,S;AACA,iB;AACA,O;AACA,I;;;;;;;;;;;;;;;;;;;AC9BA,4B;AACA,6C;AACA,yB;AACA,oC;AACA,K;AACA,K;;AAEA,4C;AACA,gD;AACA,yB;AACA,oC;AACA,wC;AACA,O;AACA,K;AACA,K;AACA,G;;;;;;;;;;;;;;;;;;;;ACdA,iC;AACA,sE;AACA,kB;AACA,mB;AACA,0B;AACA,+C;AACA,Y;AACA,0C;AACA,gD;AACA,qC;AACA,4C;AACA,qD;AACA,oD;AACA,2C;AACA,M;AACA,iB;AACA,+D;AACA,wE;AACA,I;;;;;;;;;;;;;;;;;;;ACnBA,6B;AACA,6B;AACA,0B;;AAEA,gC;AACA,yD;AACA,C;AACA,+G;AACA,sD;AACA,gD;AACA,kB;AACA,wQ;AACA,gD","file":"/packages/telescope-post-by-feed.js","sourcesContent":["var feedSchema = new SimpleSchema({\n  url: {\n    type: String,\n    regEx: SimpleSchema.RegEx.Url\n  },\n  userId: {\n    type: String,\n    label: 'feedUser',\n    autoform: {\n      instructions: 'Posts will be assigned to this user.',\n      options: function () {\n        var users = Meteor.users.find().map(function (user) {\n          return {\n            value: user._id,\n            label: getDisplayName(user)\n          };\n        });\n        return users;\n      }\n    }\n  },\n  categories: {\n    type: [String],\n    label: 'categories',\n    optional: true,\n    autoform: {\n      instructions: 'Posts will be assigned to this category.',\n      noselect: true,\n      editable: true,\n      options: function () {\n        var categories = Categories.find().map(function (category) {\n          return {\n            value: category._id,\n            label: category.name\n          };\n        });\n        return categories;\n      }\n    }\n  }\n});\n\nFeeds = new Meteor.Collection('feeds');\nFeeds.attachSchema(feedSchema);\n\n// used to keep track of which feed a post was imported from\nvar feedIdProperty = {\n  propertyName: 'feedId',\n  propertySchema: {\n    type: String,\n    label: 'feedId',\n    optional: true,\n    autoform: {\n      omit: true\n    }\n  }\n}\naddToPostSchema.push(feedIdProperty);\n\n// the RSS ID of the post in its original feed\nvar feedItemIdProperty = {\n  propertyName: 'feedItemId',\n  propertySchema: {\n    type: String,\n    label: 'feedItemId',\n    optional: true,\n    autoform: {\n      omit: true\n    }\n  }\n}\naddToPostSchema.push(feedItemIdProperty);\n\nMeteor.startup(function () {\n  Feeds.allow({\n    insert: isAdminById,\n    update: isAdminById,\n    remove: isAdminById\n  });\n\n  Meteor.methods({\n    insertFeed: function(feedUrl){\n      check(feedUrl, feedSchema);\n\n      if (Feeds.findOne({url: feedSchema.url}))\n        throw new Meteor.Error('already-exists', i18n.t('feed_already_exists'));\n\n      if (!Meteor.user() || !isAdmin(Meteor.user()))\n        throw new Meteor.Error('login-required', i18n.t('you_need_to_login_and_be_an_admin_to_add_a_new_feed'));\n\n      return Feeds.insert(feedUrl);\n    }\n  });\n});\n","adminMenu.push({\n  route: 'feeds',\n  label: 'Feeds',\n  description: 'import_new_posts_from_feeds'\n});\n\nMeteor.startup(function () {\n\n  Router.onBeforeAction(Router._filters.isAdmin, {only: ['feeds']});\n  \n  // RSS Urls Admin\n\n  Router.route('/feeds', {\n    name: 'feeds',\n    controller: AdminController,\n    waitOn: function() {\n      return [\n        Meteor.subscribe('feeds'),\n        Meteor.subscribe('allUsersAdmin'),\n        Meteor.subscribe('categories')\n      ];\n    },\n    // template: getTemplate('feeds')\n  });\n\n});\n","Meteor.startup(function () {\n  Template[getTemplate('feeds')].helpers({\n    feeds: function(){\n      return Feeds.find({}, {sort: {url: 1}});\n    },\n    feedItem: function () {\n      return getTemplate('feedItem');\n    }\n  });\n});\n","\nTemplate.__checkName(\"feeds\");\nTemplate[\"feeds\"] = new Template(\"Template.feeds\", (function() {\n  var view = this;\n  return [ HTML.DIV({\n    \"class\": \"form-well add-feed\"\n  }, \"\\n    \", HTML.Raw(\"<h3>Add new feed:</h3>\"), \"\\n    \", Blaze._TemplateWith(function() {\n    return {\n      collection: Spacebars.call(\"Feeds\"),\n      id: Spacebars.call(\"insertFeedForm\"),\n      type: Spacebars.call(\"insert\"),\n      \"label-class\": Spacebars.call(\"control-label\"),\n      \"input-col-class\": Spacebars.call(\"controls\"),\n      template: Spacebars.call(\"telescope\")\n    };\n  }, function() {\n    return Spacebars.include(view.lookupTemplate(\"quickForm\"));\n  }), \"\\n  \"), \"\\n  \", Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"feeds\"));\n  }, function() {\n    return [ \"\\n    \", Blaze._TemplateWith(function() {\n      return {\n        template: Spacebars.call(view.lookup(\"feedItem\"))\n      };\n    }, function() {\n      return Spacebars.include(function() {\n        return Spacebars.call(Template.__dynamic);\n      });\n    }), \"\\n  \" ];\n  }) ];\n}));\n","Meteor.startup(function () {\n  Template[getTemplate('feedItem')].helpers({\n    formId: function () {\n      return 'updateFeed-'+ this._id\n    }\n  });\n\n  Template[getTemplate('feedItem')].events({\n    'click .delete-link': function(e, instance){\n      e.preventDefault();\n      if (confirm(\"Delete feed?\")) {\n        Feeds.remove(instance.data._id);\n      }\n    }\n  });\n});\n","\nTemplate.__checkName(\"feedItem\");\nTemplate[\"feedItem\"] = new Template(\"Template.feedItem\", (function() {\n  var view = this;\n  return HTML.DIV({\n    \"class\": \"form-module\"\n  }, \"\\n    \", Blaze._TemplateWith(function() {\n    return {\n      collection: Spacebars.call(\"Feeds\"),\n      id: Spacebars.call(view.lookup(\"formId\")),\n      type: Spacebars.call(\"update\"),\n      doc: Spacebars.call(view.lookup(\".\")),\n      \"label-class\": Spacebars.call(\"control-label\"),\n      \"input-col-class\": Spacebars.call(\"controls\"),\n      template: Spacebars.call(\"telescope\")\n    };\n  }, function() {\n    return Spacebars.include(view.lookupTemplate(\"quickForm\"));\n  }), HTML.Raw('\\n    <a href=\"#\" class=\"delete-link\">Delete</a>\\n  '));\n}));\n","var _ = Package.underscore._,\n    package_name = \"project\",\n    namespace = \"project\";\n\nif (package_name != \"project\") {\n    namespace = TAPi18n.packages[package_name].namespace;\n}\nTAPi18n._enable({\"helper_name\":\"_\",\"supported_languages\":null,\"i18n_files_route\":\"/tap-i18n\",\"cdn_path\":null});\nTAPi18n.languages_names[\"en\"] = [\"English\",\"English\"];\n// integrate the fallback language translations \ntranslations = {};\ntranslations[namespace] = {\"feed_already_exists\":\"A feed with the same URL already exists.\",\"you_need_to_login_and_be_an_admin_to_add_a_new_feed\":\"You need to log in and be an admin to add a new feed.\",\"import_new_posts_from_feeds\":\"Import new posts from feeds.\"};\nTAPi18n._loadLangFileObject(\"en\", translations);\n"]}