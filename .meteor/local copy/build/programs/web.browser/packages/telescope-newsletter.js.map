)]}'
{"version":3,"sources":["telescope-newsletter//Users/lukasfeitsma/Documents/Studie/CMD/Jaar2/Blok4/Project-X/studentfactory/packages/telescope-newsletter/package-tap.i18n","telescope-newsletter/lib/newsletter.js","telescope-newsletter/lib/client/templates/newsletter_banner.html","telescope-newsletter/lib/client/templates/newsletter_banner.js","telescope-newsletter//Users/lukasfeitsma/Documents/Studie/CMD/Jaar2/Blok4/Project-X/studentfactory/packages/telescope-newsletter/i18n/de.i18n.json","telescope-newsletter//Users/lukasfeitsma/Documents/Studie/CMD/Jaar2/Blok4/Project-X/studentfactory/packages/telescope-newsletter/i18n/en.i18n.json","telescope-newsletter//Users/lukasfeitsma/Documents/Studie/CMD/Jaar2/Blok4/Project-X/studentfactory/packages/telescope-newsletter/i18n/es.i18n.json","telescope-newsletter//Users/lukasfeitsma/Documents/Studie/CMD/Jaar2/Blok4/Project-X/studentfactory/packages/telescope-newsletter/i18n/fr.i18n.json","telescope-newsletter//Users/lukasfeitsma/Documents/Studie/CMD/Jaar2/Blok4/Project-X/studentfactory/packages/telescope-newsletter/i18n/it.i18n.json","telescope-newsletter//Users/lukasfeitsma/Documents/Studie/CMD/Jaar2/Blok4/Project-X/studentfactory/packages/telescope-newsletter/i18n/zh-CN.i18n.json"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,sH;;AAEA,+D;AACA,gD;AACA,2C;AACA,gF;AACA,uH;;AAEA,qD;AACA,6B;AACA,yC;;;;;;;;;;;;;;;;;;;ACVA,mC;AACA,O;AACA,iB;AACA,kB;AACA,I;AACA,c;AACA,e;AACA,kB;AACA,I;AACA,W;AACA,iB;AACA,kB;AACA,I;AACA,W;AACA,iB;AACA,kB;AACA,I;AACA,U;AACA,mB;AACA,kB;AACA,I;AACA,Y;AACA,iB;AACA,kB;AACA,I;AACA,G;;AAEA,gD;AACA,wB;AACA,G;;AAEA,qB;AACA,G;AACA,gC;AACA,qB;AACA,iB;AACA,qB;AACA,iB;AACA,kB;AACA,O;AACA,K;AACA,G;AACA,E;;AAEA,W;;AAEA,wB;AACA,mC;AACA,mB;AACA,kB;AACA,mB;AACA,e;AACA,0B;AACA,2D;AACA,K;AACA,G;AACA,C;AACA,uC;;AAEA,kB;AACA,6B;AACA,mB;AACA,kB;AACA,mB;AACA,+B;AACA,e;AACA,0B;AACA,qE;AACA,K;AACA,G;AACA,C;AACA,iC;;AAEA,uB;AACA,kC;AACA,mB;AACA,iB;AACA,mB;AACA,e;AACA,0B;AACA,mB;AACA,K;AACA,G;AACA,C;AACA,sC;;AAEA,uB;AACA,kC;AACA,mB;AACA,iB;AACA,mB;AACA,e;AACA,0B;AACA,8D;AACA,mB;AACA,K;AACA,G;AACA,C;AACA,sC;;AAEA,0B;AACA,qC;AACA,mB;AACA,iB;AACA,mB;AACA,e;AACA,yB;AACA,K;AACA,G;AACA,C;AACA,yC;;AAEA,2B;AACA,sC;AACA,mB;AACA,iB;AACA,mB;AACA,e;AACA,0B;AACA,mG;AACA,gB;AACA,S;AACA,mB;AACA,4B;AACA,U;AACA,S;AACA,mB;AACA,+C;AACA,U;AACA,S;AACA,mB;AACA,sC;AACA,U;AACA,S;AACA,mB;AACA,wC;AACA,S;AACA,O;AACA,K;AACA,G;AACA,C;AACA,0C;;AAEA,sB;AACA,iC;AACA,mB;AACA,iB;AACA,mB;AACA,0B;AACA,e;AACA,0B;AACA,0F;AACA,kB;AACA,K;AACA,G;AACA,C;AACA,qC;;AAEA,qB;AACA,gC;AACA,mB;AACA,kB;AACA,mB;AACA,e;AACA,0B;AACA,mE;AACA,K;AACA,G;AACA,C;AACA,oC;;AAEA,gG;AACA,4C;AACA,U;AACA,W;AACA,oC;AACA,iB;AACA,yB;AACA,O;AACA,M;AACA,4C;AACA,I;AACA,C;;AAEA,kB;AACA,+B;AACA,W;AACA,G;;AAEA,0C;AACA,4D;AACA,8D;AACA,wB;AACA,yB;AACA,O;AACA,G;AACA,c;AACA,C;AACA,mD;;;;;;;;;;;;;;;;;;;;ACrMA,yC;AACA,sF;AACA,kB;AACA,8B;AACA,qD;AACA,iB;AACA,iC;AACA,0D;AACA,oD;AACA,mC;AACA,0C;AACA,yE;AACA,uD;AACA,yD;AACA,gD;AACA,yE;AACA,4C;AACA,2D;AACA,mB;AACA,2C;AACA,oC;AACA,sB;AACA,iC;AACA,yB;AACA,mC;AACA,yD;AACA,0C;AACA,oE;AACA,mB;AACA,8B;AACA,iB;AACA,mC;AACA,4C;AACA,sC;AACA,0C;AACA,4E;AACA,6B;AACA,gB;AACA,kD;AACA,iC;AACA,K;AACA,I;;;;;;;;;;;;;;;;;;;AC1CA,uC;AACA,iD;AACA,2F;AACA,kC;AACA,kF;AACA,oB;AACA,U;AACA,C;;AAEA,iC;AACA,uD;AACA,sB;AACA,8D;AACA,0C;AACA,U;AACA,mB;AACA,qC;AACA,K;AACA,K;AACA,C;;AAEA,4B;AACA,qD;AACA,2B;AACA,mC;AACA,M;AACA,iC;AACA,2B;AACA,M;AACA,6B;AACA,qC;AACA,S;AACA,sD;AACA,oC;AACA,uD;AACA,4C;AACA,0E;AACA,sF;AACA,Q;AACA,qB;AACA,Y;AACA,oB;AACA,O;AACA,K;AACA,K;;AAEA,oD;AACA,8C;AACA,yB;AACA,4C;AACA,wB;AACA,wC;AACA,+E;AACA,6C;AACA,oB;AACA,+B;AACA,mD;AACA,gB;AACA,gC;AACA,kC;AACA,W;AACA,W;AACA,Y;AACA,iD;AACA,mB;AACA,8C;AACA,gB;AACA,S;AACA,wC;AACA,gF;AACA,6C;AACA,oB;AACA,+B;AACA,kD;AACA,gB;AACA,iC;AACA,gC;AACA,kC;AACA,W;AACA,W;AACA,O;AACA,gD;AACA,kF;AACA,M;AACA,+C;AACA,8C;AACA,sB;AACA,yB;AACA,K;AACA,K;AACA,G;;;;;;;;;;;;;;;;;;;AC1FA,6B;AACA,0C;AACA,uC;;AAEA,gC;AACA,yD;AACA,C;AACA,8E;;AAEA,oD;AACA,8C;;AAEA,yC;AACA,C;;;;;;;;;;;;;;;;;;;ACbA,6B;AACA,0C;AACA,uC;;AAEA,gC;AACA,yD;AACA,C;AACA,gD;AACA,kB;AACA,+gB;AACA,gD;;;;;;;;;;;;;;;;;;;ACVA,6B;AACA,0C;AACA,uC;;AAEA,gC;AACA,yD;AACA,C;;;;;;;;;;;;;;;;;;;ACNA,6B;AACA,0C;AACA,uC;;AAEA,gC;AACA,yD;AACA,C;;;;;;;;;;;;;;;;;;;ACNA,6B;AACA,0C;AACA,uC;;AAEA,gC;AACA,yD;AACA,C;;;;;;;;;;;;;;;;;;;ACNA,6B;AACA,0C;AACA,uC;;AAEA,gC;AACA,yD;AACA,C","file":"/packages/telescope-newsletter.js","sourcesContent":["TAPi18n.packages[\"telescope-newsletter\"] = {\"translation_function_name\":\"__\",\"helper_name\":\"_\",\"namespace\":\"project\"};\n\n// define package's translation function (proxy to the i18next)\n__ = TAPi18n._getPackageI18nextProxy(\"project\");\n// define the package's templates registrar\nregisterI18nTemplate = TAPi18n._getRegisterHelpersProxy(\"telescope-newsletter\");\nregisterTemplate = registerI18nTemplate; // XXX OBSOLETE, kept for backward compatibility will be removed in the future\n\n// Record the list of templates prior to package load\nvar _ = Package.underscore._;\nnon_package_templates = _.keys(Template);\n","campaignSchema = new SimpleSchema({\n _id: {\n    type: String,\n    optional: true\n  },\n  createdAt: {\n    type: Date,\n    optional: true\n  },\n  sentAt: {\n    type: String,\n    optional: true\n  },\n  status: {\n    type: String,\n    optional: true\n  },\n  posts: {\n    type: [String],\n    optional: true\n  },\n  webHits: {\n    type: Number,\n    optional: true\n  },\n});\n\nCampaigns = new Meteor.Collection(\"campaigns\", {\n  schema: campaignSchema\n});\n\naddToPostSchema.push(\n  {\n    propertyName: 'scheduledAt',\n    propertySchema: {\n      type: Date,\n      optional: true,\n      autoform: {\n        omit: true\n      }\n    }\n  }\n);\n\n// Settings\n\nvar enableNewsletter = {\n  propertyName: 'enableNewsletter',\n  propertySchema: {\n    type: Boolean,\n    optional: true,\n    autoform: {\n      group: 'newsletter',\n      instructions: 'Enable newsletter (requires restart).'\n    }\n  }\n}\nSettings.addToSchema(enableNewsletter);\n\nvar showBanner = {\n  propertyName: 'showBanner',\n  propertySchema: {\n    type: Boolean,\n    optional: true,\n    label: 'Newsletter banner',\n    autoform: {\n      group: 'newsletter',\n      instructions: 'Show newsletter sign-up form on the front page.'\n    }\n  }\n}\nSettings.addToSchema(showBanner);\n\nvar mailChimpAPIKey = {\n  propertyName: 'mailChimpAPIKey',\n  propertySchema: {\n    type: String,\n    optional: true,\n    autoform: {\n      group: 'newsletter',\n      private: true\n    }\n  }\n}\nSettings.addToSchema(mailChimpAPIKey);\n\nvar mailChimpListId = {\n  propertyName: 'mailChimpListId',\n  propertySchema: {\n    type: String,\n    optional: true,\n    autoform: {\n      group: 'newsletter',\n      instructions: 'The ID of the list you want to send to.',\n      private: true\n    }\n  }\n}\nSettings.addToSchema(mailChimpListId);\n\nvar postsPerNewsletter = {\n  propertyName: 'postsPerNewsletter',\n  propertySchema: {\n    type: Number,\n    optional: true,\n    autoform: {\n      group: 'newsletter'\n    }\n  }\n}\nSettings.addToSchema(postsPerNewsletter);\n\nvar newsletterFrequency = {\n  propertyName: 'newsletterFrequency',\n  propertySchema: {\n    type: Number,\n    optional: true,\n    autoform: {\n      group: 'newsletter',\n      instructions: 'Defaults to once a week. Changes require restarting your app to take effect.',\n      options: [\n        {\n          value: 1,\n          label: 'Every Day'\n        },\n        {\n          value: 2,\n          label: 'Mondays, Wednesdays, Fridays'\n        },\n        {\n          value: 3,\n          label: 'Mondays & Thursdays'\n        },\n        {\n          value: 7,\n          label: 'Once a week (Mondays)'\n        }\n      ]\n    }\n  }\n}\nSettings.addToSchema(newsletterFrequency);\n\nvar newsletterTime = {\n  propertyName: 'newsletterTime',\n  propertySchema: {\n    type: String,\n    optional: true,\n    defaultValue: '00:00',\n    autoform: {\n      group: 'newsletter',\n      instructions: 'Defaults to 00:00/12:00 AM. Time to send out newsletter if enabled.',\n      type: 'time'\n    }\n  }\n}\nSettings.addToSchema(newsletterTime);\n\nvar autoSubscribe = {\n  propertyName: 'autoSubscribe',\n  propertySchema: {\n    type: Boolean,\n    optional: true,\n    autoform: {\n      group: 'newsletter',\n      instructions: 'Automatically subscribe new users on sign-up.'\n    }\n  }\n}\nSettings.addToSchema(autoSubscribe);\n\n// create new \"campaign\" lens for all posts from the past X days that haven't been scheduled yet\nviewParameters.campaign = function (terms) {\n  return {\n    find: {\n      scheduledAt: {$exists: false},\n      postedAt: {\n        $gte: terms.after\n      }\n    },\n    options: {sort: {sticky: -1, score: -1}}\n  };\n}\n\nheroModules.push({\n  template: 'newsletterBanner',\n  order: 10\n});\n\n function subscribeUserOnCreation (user) {\n  if (!!Settings.get('autoSubscribe') && !!getEmail(user)) {\n    addToMailChimpList(user, false, function (error, result) {\n      console.log(error)\n      console.log(result)\n    });\n  }\n  return user;\n}\nuserCreatedCallbacks.push(subscribeUserOnCreation);\n","\nTemplate.__checkName(\"newsletterBanner\");\nTemplate[\"newsletterBanner\"] = new Template(\"Template.newsletterBanner\", (function() {\n  var view = this;\n  return Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"showBanner\"));\n  }, function() {\n    return [ \"\\n    \", HTML.DIV({\n      \"class\": \"newsletter-banner grid-module grid banner\"\n    }, \"\\n      \", HTML.FORM(\"\\n        \", HTML.H4({\n      \"class\": \"newsletter-tagline\"\n    }, Blaze.View(\"lookup:_\", function() {\n      return Spacebars.mustache(view.lookup(\"_\"), \"receive_the_best_of\");\n    }), \" \", Blaze.View(\"lookup:siteName\", function() {\n      return Spacebars.mustache(view.lookup(\"siteName\"));\n    }), \" \", Blaze.View(\"lookup:_\", function() {\n      return Spacebars.mustache(view.lookup(\"_\"), \"right_in_your_inbox\");\n    })), \"\\n        \", Blaze.If(function() {\n      return Spacebars.call(view.lookup(\"isNotConnected\"));\n    }, function() {\n      return [ \"\\n          \", HTML.INPUT({\n        \"class\": \"newsletter-email\",\n        type: \"email\",\n        placeholder: \"Your Email\"\n      }), \"\\n        \" ];\n    }), \"\\n        \", HTML.BUTTON({\n      \"class\": \"button newsletter-button btn btn-primary\"\n    }, Blaze.View(\"lookup:_\", function() {\n      return Spacebars.mustache(view.lookup(\"_\"), \"get_newsletter\");\n    }), HTML.SPAN({\n      \"class\": \"button-loader\"\n    }, HTML.IMG({\n      src: \"/img/loading-balls.svg\"\n    }))), \"\\n      \"), \"\\n      \", HTML.H4({\n      \"class\": \"newsletter-subscribed\"\n    }, Blaze.View(\"lookup:_\", function() {\n      return Spacebars.mustache(view.lookup(\"_\"), \"thanks_for_subscribing\");\n    })), \"\\n      \", HTML.A({\n      href: \"#\",\n      \"class\": \"newsletter-dismiss banner-dismiss\"\n    }, \"×\"), \"\\n    \"), \"\\n  \" ];\n  });\n}));\n","var confirmSubscription = function () {\n  $('.newsletter-banner form').css('opacity', 0);\n  $('.newsletter-banner .newsletter-subscribed').css('display', 'block').css('opacity', 1);\n  Meteor.setInterval(function () {\n    // required because otherwise banner disappears immediately after confirmation\n    dismissBanner();\n  }, 2000)\n}\n\nvar dismissBanner = function () {\n  $('.newsletter-banner').fadeOut('fast', function () {\n    if(Meteor.user()){\n      // if user is connected, change setting in their account\n      setUserSetting('showBanner', false);\n    }else{\n      // set cookie\n      Cookie.set('showBanner', \"no\");\n    }\n  });\n}\n\nMeteor.startup(function () {\n  Template[getTemplate('newsletterBanner')].helpers({\n    siteName: function () {\n      return Settings.get('title');\n    },\n    isNotConnected: function () {\n      return !Meteor.user()\n    },\n    showBanner: function () {\n      // note: should not be reactive\n      if(\n            Settings.get('showBanner', false) == false\n        ||  !can.view(Meteor.user())\n        ||  Router.current().location.get().path != '/'\n        ||  Cookie.get('showBanner') == \"no\"\n        ||  (Meteor.user() && getUserSetting('showBanner', true) == false)\n        ||  (Meteor.user() && getUserSetting('subscribedToNewsletter', false) == true)\n      ){\n        return false;\n      }else{\n        return true;\n      }\n    }\n  });\n\n  Template[getTemplate('newsletterBanner')].events({\n    'click .newsletter-button': function (e) {\n      e.preventDefault();\n      var $banner = $('.newsletter-banner');\n      if(Meteor.user()){\n        $banner.addClass('show-loader');\n        Meteor.call('addCurrentUserToMailChimpList', function (error, result) {\n          $banner.removeClass('show-loader');\n          if(error){\n            console.log(error);\n            Messages.flash(error.message, \"error\");\n          }else{\n            console.log(result);\n            confirmSubscription();\n          }\n        });\n      }else{\n        var email = $('.newsletter-email').val();\n        if(!email){\n          alert('Please fill in your email.');\n          return\n        }\n        $banner.addClass('show-loader');\n        Meteor.call('addEmailToMailChimpList', email, function (error, result) {\n          $banner.removeClass('show-loader');\n          if(error){\n            console.log(error);\n            Messages.flash(error.reason, \"error\");\n          }else{\n            Messages.clearSeen();\n            console.log(result);\n            confirmSubscription();\n          }\n        });\n      }\n      // $('body').addClass('showing-lightbox');\n      // $(e.target).parents('.post').find('.post-video-lightbox').fadeIn('fast');\n    },\n    'click .newsletter-dismiss': function (e) {\n      $('.newsletter-banner').fadeOut('fast');\n      dismissBanner();\n      e.preventDefault();\n    }\n  });\n});\n","var _ = Package.underscore._,\n    package_name = \"telescope-newsletter\",\n    namespace = \"telescope-newsletter\";\n\nif (package_name != \"project\") {\n    namespace = TAPi18n.packages[package_name].namespace;\n}\nvar package_templates = _.difference(_.keys(Template), non_package_templates);\n\nfor (var i = 0; i < package_templates.length; i++) {\n  var package_template = package_templates[i];\n\n  registerI18nTemplate(package_template);\n}\n","var _ = Package.underscore._,\n    package_name = \"telescope-newsletter\",\n    namespace = \"telescope-newsletter\";\n\nif (package_name != \"project\") {\n    namespace = TAPi18n.packages[package_name].namespace;\n}\n// integrate the fallback language translations \ntranslations = {};\ntranslations[namespace] = {\"receive_the_best_of\":\"Receive the best of\",\"right_in_your_inbox\":\"right in your inbox.\",\"get_newsletter\":\"Get Newsletter\",\"thanks_for_subscribing\":\"Thanks for subscribing!\",\"newsletter\":\"newsletter\",\"showBanner\":\"Show Banner\",\"mailChimpAPIKey\":\"MailChimp API Key\",\"mailChimpListId\":\"MailChimp List ID\",\"postsPerNewsletter\":\"Posts per Newsletter\",\"newsletterFrequency\":\"Newsletter Frequency\",\"newsletterTime\":\"Newsletter Time\",\"enableNewsletter\":\"Enable Newsletter\",\"autoSubscribe\":\"Auto Subscribe\"};\nTAPi18n._loadLangFileObject(\"en\", translations);\n","var _ = Package.underscore._,\n    package_name = \"telescope-newsletter\",\n    namespace = \"telescope-newsletter\";\n\nif (package_name != \"project\") {\n    namespace = TAPi18n.packages[package_name].namespace;\n}\n","var _ = Package.underscore._,\n    package_name = \"telescope-newsletter\",\n    namespace = \"telescope-newsletter\";\n\nif (package_name != \"project\") {\n    namespace = TAPi18n.packages[package_name].namespace;\n}\n","var _ = Package.underscore._,\n    package_name = \"telescope-newsletter\",\n    namespace = \"telescope-newsletter\";\n\nif (package_name != \"project\") {\n    namespace = TAPi18n.packages[package_name].namespace;\n}\n","var _ = Package.underscore._,\n    package_name = \"telescope-newsletter\",\n    namespace = \"telescope-newsletter\";\n\nif (package_name != \"project\") {\n    namespace = TAPi18n.packages[package_name].namespace;\n}\n"]}