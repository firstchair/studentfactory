)]}'
{"version":3,"sources":["telescope-messages/lib/client/messages.js","telescope-messages/lib/client/templates/messages.html","telescope-messages/lib/client/templates/messages.js","telescope-messages/lib/client/templates/message_item.html","telescope-messages/lib/client/templates/message_item.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,Y;AACA,mC;AACA,0C;;AAEA,kC;AACA,yD;AACA,2C;AACA,iF;AACA,I;;AAEA,yB;AACA,4E;AACA,G;AACA,E;;;;;;;;;;;;;;;;;;;;ACZA,iC;AACA,sE;AACA,kB;AACA,gC;AACA,mD;AACA,iB;AACA,qD;AACA,c;AACA,6D;AACA,Q;AACA,mB;AACA,2C;AACA,kD;AACA,S;AACA,gB;AACA,K;AACA,I;;;;;;;;;;;;;;;;;;;ACjBA,2C;AACA,6B;AACA,uC;AACA,I;AACA,uB;AACA,kD;AACA,G;AACA,G;;;;;;;;;;;;;;;;;;;;ACNA,qC;AACA,8E;AACA,kB;AACA,8B;AACA,+C;AACA,iB;AACA,iC;AACA,qB;AACA,6B;AACA,2B;AACA,wF;AACA,O;AACA,8D;AACA,wD;AACA,yC;AACA,K;AACA,I;;;;;;;;;;;;;;;;;;;ACjBA,2D;AACA,6B;;AAEA,8B;AACA,6D;AACA,S;AACA,G","file":"/packages/telescope-messages.js","sourcesContent":["Messages = {\n  // Local (client-only) collection\n  collection: new Meteor.Collection(null),\n\n  flash: function(message, type) {\n    type = (typeof type === 'undefined') ? 'error': type;\n    // Store errors in the local collection\n    this.collection.insert({message:message, type:type, seen: false, show:true});\n  },\n\n  clearSeen: function() {\n    this.collection.update({seen:true}, {$set: {show:false}}, {multi:true});\n  }\n};\n","\nTemplate.__checkName(\"messages\");\nTemplate[\"messages\"] = new Template(\"Template.messages\", (function() {\n  var view = this;\n  return Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"messages\"));\n  }, function() {\n    return [ \"\\n\t\t\", Blaze._TemplateWith(function() {\n      return {\n        template: Spacebars.call(view.lookup(\"message_item\"))\n      };\n    }, function() {\n      return Spacebars.include(function() {\n        return Spacebars.call(Template.__dynamic);\n      });\n    }), \"\\n\t\" ];\n  });\n}));\n","Template[getTemplate('messages')].helpers({\n  message_item: function () {\n    return getTemplate('message_item');\n  },\n  messages: function(){\n    return Messages.collection.find({show: true});\n  }\n});\n","\nTemplate.__checkName(\"message_item\");\nTemplate[\"message_item\"] = new Template(\"Template.message_item\", (function() {\n  var view = this;\n  return Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"show\"));\n  }, function() {\n    return [ \"\\n    \", HTML.DIV({\n      \"class\": \"grid\"\n    }, \"\\n      \", HTML.DIV({\n      \"class\": function() {\n        return [ \"error \", Spacebars.mustache(view.lookup(\"type\")), \"-message module\" ];\n      }\n    }, \"\\n        \", Blaze.View(\"lookup:message\", function() {\n      return Spacebars.mustache(view.lookup(\"message\"));\n    }), \"\\n      \"), \"\\n    \"), \"\\n  \" ];\n  });\n}));\n","Template[getTemplate('message_item')].onCreated(function(){\n\tvar messageId=this.data._id;\n\n\tMeteor.setTimeout(function(){\n\t\tMessages.collection.update(messageId, {$set: {seen:true}});\n\t}, 100);\n});\n"]}